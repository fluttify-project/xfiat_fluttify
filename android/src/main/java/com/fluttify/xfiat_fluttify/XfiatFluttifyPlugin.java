//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package com.fluttify.xfiat_fluttify;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class XfiatFluttifyPlugin implements FlutterPlugin, MethodChannel.MethodCallHandler {

    private BinaryMessenger messenger;

    private final Map<String, Handler> handlerMap = new HashMap<String, Handler>() {{
        // getter
        put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::get_pwdt", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl.PassWord ref = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) getHEAP().get(refId);
        
            String result = ref.pwdt;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::get_pwid", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl.PassWord ref = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) getHEAP().get(refId);
        
            String result = ref.pwid;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::get_pwtext", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl.PassWord ref = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) getHEAP().get(refId);
        
            String result = ref.pwtext;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.VerifierResult::get_sst", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            String result = ref.sst;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.VerifierResult::get_ret", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            boolean result = ref.ret;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.VerifierResult::get_dcs", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            String result = ref.dcs;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.VerifierResult::get_vid", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            String result = ref.vid;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.VerifierResult::get_suc", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            int result = ref.suc;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.VerifierResult::get_rgn", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            int result = ref.rgn;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.VerifierResult::get_trs", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            String result = ref.trs;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.speech.VerifierResult::get_source", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            String result = ref.source;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_buffer", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            byte[] result = ref.buffer;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_offset", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            int result = ref.offset;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_length", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            int result = ref.length;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_status", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            int result = ref.status;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_sub", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            int result = ref.sub;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_volume", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            int result = ref.volume;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_voice", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            boolean result = ref.voice;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_quality", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            int result = ref.quality;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_start", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            int result = ref.start;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_end", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            int result = ref.end;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_error", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            int result = ref.error;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_confidence", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            float result = ref.confidence;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_sst", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            String result = ref.sst;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_ret", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            int result = ref.ret;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_dcs", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            String result = ref.dcs;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_score", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            Double result = ref.score;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_score_raw", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            Double result = ref.score_raw;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_vid", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            String result = ref.vid;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_suc", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            int result = ref.suc;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_rgn", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            int result = ref.rgn;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_trs", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            String result = ref.trs;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_err", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            int result = ref.err;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.cloud.VerifierResult::get_source", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            String result = ref.source;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_startByte", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.startByte;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_endByte", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.endByte;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_status", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.status;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_volumeLevel", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.volumeLevel;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_waitPauseOrEnd", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.waitPauseOrEnd;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_endRemainFrameNum", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.endRemainFrameNum;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_waitStart", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.waitStart;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_startRemainFrameNum", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.startRemainFrameNum;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_wavData", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            byte[] result = ref.wavData;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_wavDataSize", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.wavDataSize;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_inSpeech", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.inSpeech;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_audioQuality", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.audioQuality;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.VAD.VadData::get_firstOutByte", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            int result = ref.firstOutByte;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MSCSessionInfo::get_errorcode", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            int result = ref.errorcode;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MSCSessionInfo::get_epstatues", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            int result = ref.epstatues;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MSCSessionInfo::get_rsltstatus", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            int result = ref.rsltstatus;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MSCSessionInfo::get_sesstatus", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            int result = ref.sesstatus;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MSCSessionInfo::get_buffer", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            byte[] result = ref.buffer;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MSCSessionInfo::get_buflen", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            int result = ref.buflen;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MetaVAD.Instance::get_handle", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            long result = ref.handle;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MetaVAD.Instance::get_rate", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            int result = ref.rate;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MetaVAD.Instance::get_begin", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            int result = ref.begin;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MetaVAD.Instance::get_end", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            int result = ref.end;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MetaVAD.Instance::get_seg", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            int result = ref.seg;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.iflytek.msc.MetaVAD.Instance::get_volume", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            int result = ref.volume;
        
        
        
            methodResult.success(result);
        });
        // setter
        put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::set_pwdt", (args, methodResult) -> {
            // jsonable arg
            String pwdt = (String) args.get("pwdt");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl.PassWord ref = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) getHEAP().get(refId);
        
            ref.pwdt = pwdt;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::set_pwid", (args, methodResult) -> {
            // jsonable arg
            String pwid = (String) args.get("pwid");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl.PassWord ref = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) getHEAP().get(refId);
        
            ref.pwid = pwid;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.SpeakerVerifierAidl.PassWord::set_pwtext", (args, methodResult) -> {
            // jsonable arg
            String pwtext = (String) args.get("pwtext");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl.PassWord ref = (com.iflytek.speech.SpeakerVerifierAidl.PassWord) getHEAP().get(refId);
        
            ref.pwtext = pwtext;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.VerifierResult::set_sst", (args, methodResult) -> {
            // jsonable arg
            String sst = (String) args.get("sst");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            ref.sst = sst;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.VerifierResult::set_ret", (args, methodResult) -> {
            // jsonable arg
            boolean ret = (boolean) args.get("ret");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            ref.ret = ret;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.VerifierResult::set_dcs", (args, methodResult) -> {
            // jsonable arg
            String dcs = (String) args.get("dcs");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            ref.dcs = dcs;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.VerifierResult::set_vid", (args, methodResult) -> {
            // jsonable arg
            String vid = (String) args.get("vid");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            ref.vid = vid;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.VerifierResult::set_suc", (args, methodResult) -> {
            // jsonable arg
            int suc = (int) args.get("suc");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            ref.suc = suc;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.VerifierResult::set_rgn", (args, methodResult) -> {
            // jsonable arg
            int rgn = (int) args.get("rgn");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            ref.rgn = rgn;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.VerifierResult::set_trs", (args, methodResult) -> {
            // jsonable arg
            String trs = (String) args.get("trs");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            ref.trs = trs;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.speech.VerifierResult::set_source", (args, methodResult) -> {
            // jsonable arg
            String source = (String) args.get("source");
        
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            ref.source = source;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_buffer", (args, methodResult) -> {
            // jsonable arg
            byte[] buffer = (byte[]) args.get("buffer");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.buffer = buffer;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_offset", (args, methodResult) -> {
            // jsonable arg
            int offset = (int) args.get("offset");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.offset = offset;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_length", (args, methodResult) -> {
            // jsonable arg
            int length = (int) args.get("length");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.length = length;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_status", (args, methodResult) -> {
            // jsonable arg
            int status = (int) args.get("status");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.status = status;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_sub", (args, methodResult) -> {
            // jsonable arg
            int sub = (int) args.get("sub");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.sub = sub;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_volume", (args, methodResult) -> {
            // jsonable arg
            int volume = (int) args.get("volume");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.volume = volume;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_voice", (args, methodResult) -> {
            // jsonable arg
            boolean voice = (boolean) args.get("voice");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.voice = voice;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_quality", (args, methodResult) -> {
            // jsonable arg
            int quality = (int) args.get("quality");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.quality = quality;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_start", (args, methodResult) -> {
            // jsonable arg
            int start = (int) args.get("start");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.start = start;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_end", (args, methodResult) -> {
            // jsonable arg
            int end = (int) args.get("end");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.end = end;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_error", (args, methodResult) -> {
            // jsonable arg
            int error = (int) args.get("error");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.error = error;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.util.AudioDetector.DetectorResult::set_confidence", (args, methodResult) -> {
            // jsonable arg
            Double confidence = (Double) args.get("confidence");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector.DetectorResult ref = (com.iflytek.cloud.util.AudioDetector.DetectorResult) getHEAP().get(refId);
        
            ref.confidence = new Double(confidence).floatValue();
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_sst", (args, methodResult) -> {
            // jsonable arg
            String sst = (String) args.get("sst");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.sst = sst;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_ret", (args, methodResult) -> {
            // jsonable arg
            int ret = (int) args.get("ret");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.ret = ret;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_dcs", (args, methodResult) -> {
            // jsonable arg
            String dcs = (String) args.get("dcs");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.dcs = dcs;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_score", (args, methodResult) -> {
            // jsonable arg
            Double score = (Double) args.get("score");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.score = score;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_score_raw", (args, methodResult) -> {
            // jsonable arg
            Double score_raw = (Double) args.get("score_raw");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.score_raw = score_raw;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_vid", (args, methodResult) -> {
            // jsonable arg
            String vid = (String) args.get("vid");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.vid = vid;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_suc", (args, methodResult) -> {
            // jsonable arg
            int suc = (int) args.get("suc");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.suc = suc;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_rgn", (args, methodResult) -> {
            // jsonable arg
            int rgn = (int) args.get("rgn");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.rgn = rgn;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_trs", (args, methodResult) -> {
            // jsonable arg
            String trs = (String) args.get("trs");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.trs = trs;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_err", (args, methodResult) -> {
            // jsonable arg
            int err = (int) args.get("err");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.err = err;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.cloud.VerifierResult::set_source", (args, methodResult) -> {
            // jsonable arg
            String source = (String) args.get("source");
        
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierResult ref = (com.iflytek.cloud.VerifierResult) getHEAP().get(refId);
        
            ref.source = source;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_startByte", (args, methodResult) -> {
            // jsonable arg
            int startByte = (int) args.get("startByte");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.startByte = startByte;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_endByte", (args, methodResult) -> {
            // jsonable arg
            int endByte = (int) args.get("endByte");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.endByte = endByte;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_status", (args, methodResult) -> {
            // jsonable arg
            int status = (int) args.get("status");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.status = status;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_volumeLevel", (args, methodResult) -> {
            // jsonable arg
            int volumeLevel = (int) args.get("volumeLevel");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.volumeLevel = volumeLevel;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_waitPauseOrEnd", (args, methodResult) -> {
            // jsonable arg
            int waitPauseOrEnd = (int) args.get("waitPauseOrEnd");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.waitPauseOrEnd = waitPauseOrEnd;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_endRemainFrameNum", (args, methodResult) -> {
            // jsonable arg
            int endRemainFrameNum = (int) args.get("endRemainFrameNum");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.endRemainFrameNum = endRemainFrameNum;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_waitStart", (args, methodResult) -> {
            // jsonable arg
            int waitStart = (int) args.get("waitStart");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.waitStart = waitStart;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_startRemainFrameNum", (args, methodResult) -> {
            // jsonable arg
            int startRemainFrameNum = (int) args.get("startRemainFrameNum");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.startRemainFrameNum = startRemainFrameNum;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_wavData", (args, methodResult) -> {
            // jsonable arg
            byte[] wavData = (byte[]) args.get("wavData");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.wavData = wavData;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_wavDataSize", (args, methodResult) -> {
            // jsonable arg
            int wavDataSize = (int) args.get("wavDataSize");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.wavDataSize = wavDataSize;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_inSpeech", (args, methodResult) -> {
            // jsonable arg
            int inSpeech = (int) args.get("inSpeech");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.inSpeech = inSpeech;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_audioQuality", (args, methodResult) -> {
            // jsonable arg
            int audioQuality = (int) args.get("audioQuality");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.audioQuality = audioQuality;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.VAD.VadData::set_firstOutByte", (args, methodResult) -> {
            // jsonable arg
            int firstOutByte = (int) args.get("firstOutByte");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.VAD.VadData ref = (com.iflytek.msc.VAD.VadData) getHEAP().get(refId);
        
            ref.firstOutByte = firstOutByte;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MSCSessionInfo::set_errorcode", (args, methodResult) -> {
            // jsonable arg
            int errorcode = (int) args.get("errorcode");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            ref.errorcode = errorcode;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MSCSessionInfo::set_epstatues", (args, methodResult) -> {
            // jsonable arg
            int epstatues = (int) args.get("epstatues");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            ref.epstatues = epstatues;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MSCSessionInfo::set_rsltstatus", (args, methodResult) -> {
            // jsonable arg
            int rsltstatus = (int) args.get("rsltstatus");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            ref.rsltstatus = rsltstatus;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MSCSessionInfo::set_sesstatus", (args, methodResult) -> {
            // jsonable arg
            int sesstatus = (int) args.get("sesstatus");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            ref.sesstatus = sesstatus;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MSCSessionInfo::set_buffer", (args, methodResult) -> {
            // jsonable arg
            byte[] buffer = (byte[]) args.get("buffer");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            ref.buffer = buffer;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MSCSessionInfo::set_buflen", (args, methodResult) -> {
            // jsonable arg
            int buflen = (int) args.get("buflen");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MSCSessionInfo ref = (com.iflytek.msc.MSCSessionInfo) getHEAP().get(refId);
        
            ref.buflen = buflen;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MetaVAD.Instance::set_handle", (args, methodResult) -> {
            // jsonable arg
            long handle = (long) args.get("handle");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            ref.handle = handle;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MetaVAD.Instance::set_rate", (args, methodResult) -> {
            // jsonable arg
            int rate = (int) args.get("rate");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            ref.rate = rate;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MetaVAD.Instance::set_begin", (args, methodResult) -> {
            // jsonable arg
            int begin = (int) args.get("begin");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            ref.begin = begin;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MetaVAD.Instance::set_end", (args, methodResult) -> {
            // jsonable arg
            int end = (int) args.get("end");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            ref.end = end;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MetaVAD.Instance::set_seg", (args, methodResult) -> {
            // jsonable arg
            int seg = (int) args.get("seg");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            ref.seg = seg;
            methodResult.success("success");
        });
        // setter
        put("com.iflytek.msc.MetaVAD.Instance::set_volume", (args, methodResult) -> {
            // jsonable arg
            int volume = (int) args.get("volume");
        
            int refId = (int) args.get("refId");
            com.iflytek.msc.MetaVAD.Instance ref = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get(refId);
        
            ref.volume = volume;
            methodResult.success("success");
        });
        // method
        put("com.iflytek.speech.SpeechComponent::getPackageName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechComponent@" + refId + "::getPackageName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPackageName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechComponent::getEngines", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechComponent@" + refId + "::getEngines(" + "" + ")");
            }
        
            // invoke native method
            List<String> result;
            try {
                result = ref.getEngines();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechComponent::addEngine", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechComponent@" + refId + "::addEngine(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.addEngine(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.speech.SpeechComponent::isEngineAvaible", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechComponent ref = (com.iflytek.speech.SpeechComponent) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechComponent@" + refId + "::isEngineAvaible(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isEngineAvaible(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeakerVerifierAidl::getPasswordList", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::getPasswordList(" + var1 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPasswordList(var1, new com.iflytek.speech.SpeakerVerifierAidl.DownloadListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.speech.SpeakerVerifierAidl::getPasswordList::Callback");
        
                // call dart method
                @Override
                public void onData(ArrayList<com.iflytek.speech.SpeakerVerifierAidl.PassWord> var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onData(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // list arg
                    List<Integer> argvar1 = new ArrayList<>();
                    for (com.iflytek.speech.SpeakerVerifierAidl.PassWord item : var1) {
                        getHEAP().put(item.hashCode(), item);
                        argvar1.add(item.hashCode());
                    }
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.speech.SpeakerVerifierAidl.DownloadListener::onData",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onError(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.speech.SpeakerVerifierAidl.DownloadListener::onError",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            }, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeakerVerifierAidl::setParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.setParameter(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeakerVerifierAidl::getParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::getParameter(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getParameter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeakerVerifierAidl::endSpeak", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::endSpeak(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.endSpeak();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.speech.SpeakerVerifierAidl::stopSpeak", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl ref = (com.iflytek.speech.SpeakerVerifierAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl@" + refId + "::stopSpeak(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopSpeak();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.speech.SpeechUnderstanderAidl::isUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechUnderstanderAidl@" + refId + "::isUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isUnderstanding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechUnderstanderAidl::setParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechUnderstanderAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.setParameter(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechUnderstanderAidl::getParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechUnderstanderAidl@" + refId + "::getParameter(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getParameter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechUnderstanderAidl::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechUnderstanderAidl ref = (com.iflytek.speech.SpeechUnderstanderAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechUnderstanderAidl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechRecognizerAidl::setParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.setParameter(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechRecognizerAidl::getParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::getParameter(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getParameter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechRecognizerAidl::destory", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::destory(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.destory();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechRecognizerAidl::isListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::isListening(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechRecognizerAidl::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechRecognizerAidl ref = (com.iflytek.speech.SpeechRecognizerAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechRecognizerAidl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeakerVerifierAidl.DownloadListener::onError", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeakerVerifierAidl.DownloadListener ref = (com.iflytek.speech.SpeakerVerifierAidl.DownloadListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeakerVerifierAidl.DownloadListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.speech.SpeechSynthesizerAidl::isSpeaking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechSynthesizerAidl@" + refId + "::isSpeaking(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isSpeaking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechSynthesizerAidl::setParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechSynthesizerAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.setParameter(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechSynthesizerAidl::getParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechSynthesizerAidl@" + refId + "::getParameter(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getParameter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.SpeechSynthesizerAidl::destory", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.SpeechSynthesizerAidl ref = (com.iflytek.speech.SpeechSynthesizerAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.SpeechSynthesizerAidl@" + refId + "::destory(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.destory();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.UtilityConfig::getCallerInfo", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.UtilityConfig::getCallerInfo(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.speech.UtilityConfig.getCallerInfo(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.UtilityConfig::getComponentUrlParam", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.UtilityConfig::getComponentUrlParam(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.speech.UtilityConfig.getComponentUrlParam(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.ISpeechModule::setParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.ISpeechModule@" + refId + "::setParameter(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.setParameter(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.ISpeechModule::getParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.ISpeechModule@" + refId + "::getParameter(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getParameter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.ISpeechModule::getIntent", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.ISpeechModule@" + refId + "::getIntent(" + "" + ")");
            }
        
            // invoke native method
            android.content.Intent result;
            try {
                result = ref.getIntent();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.speech.ISpeechModule::destory", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.ISpeechModule@" + refId + "::destory(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.destory();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.ISpeechModule::isAvailable", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.ISpeechModule ref = (com.iflytek.speech.ISpeechModule) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.ISpeechModule@" + refId + "::isAvailable(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isAvailable();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.WakeuperResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.WakeuperResult ref = (com.iflytek.speech.WakeuperResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.WakeuperResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.VerifierResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.VerifierResult ref = (com.iflytek.speech.VerifierResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VerifierResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.RecognizerResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.RecognizerResult ref = (com.iflytek.speech.RecognizerResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.RecognizerResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.Version::getVersionName", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.Version::getVersionName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.speech.Version.getVersionName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.Version::getVersionCode", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.Version::getVersionCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.speech.Version.getVersionCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.TextUnderstanderAidl::isUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.TextUnderstanderAidl ref = (com.iflytek.speech.TextUnderstanderAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.TextUnderstanderAidl@" + refId + "::isUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isUnderstanding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.TextUnderstanderAidl::setParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.TextUnderstanderAidl ref = (com.iflytek.speech.TextUnderstanderAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.TextUnderstanderAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.setParameter(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.TextUnderstanderAidl::getParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.TextUnderstanderAidl ref = (com.iflytek.speech.TextUnderstanderAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.TextUnderstanderAidl@" + refId + "::getParameter(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getParameter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.UnderstanderResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.UnderstanderResult ref = (com.iflytek.speech.UnderstanderResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.UnderstanderResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.VoiceWakeuperAidl::destroy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VoiceWakeuperAidl@" + refId + "::destroy(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.destroy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.VoiceWakeuperAidl::isListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VoiceWakeuperAidl@" + refId + "::isListening(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.VoiceWakeuperAidl::setParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VoiceWakeuperAidl@" + refId + "::setParameter(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.setParameter(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.speech.VoiceWakeuperAidl::getParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.speech.VoiceWakeuperAidl ref = (com.iflytek.speech.VoiceWakeuperAidl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.speech.VoiceWakeuperAidl@" + refId + "::getParameter(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getParameter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.VerifierListener::onVolumeChanged", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VerifierListener@" + refId + "::onVolumeChanged(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onVolumeChanged(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.VerifierListener::onBeginOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VerifierListener@" + refId + "::onBeginOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onBeginOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.VerifierListener::onEndOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VerifierListener@" + refId + "::onEndOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onEndOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.VerifierListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.VerifierResult var1 = (com.iflytek.cloud.VerifierResult) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VerifierListener@" + refId + "::onResult(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.VerifierListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VerifierListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.VerifierListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VerifierListener ref = (com.iflytek.cloud.VerifierListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VerifierListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::createVerifier", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier::createVerifier(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeakerVerifier result;
            try {
                result = com.iflytek.cloud.SpeakerVerifier.createVerifier(var0, new com.iflytek.cloud.InitListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeakerVerifier::createVerifier::Callback");
        
                // call dart method
                @Override
                public void onInit(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.InitListener::onInit",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::getVerifier", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier::getVerifier(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeakerVerifier result;
            try {
                result = com.iflytek.cloud.SpeakerVerifier.getVerifier();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::getPasswordList", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechListener var1 = (com.iflytek.cloud.SpeechListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::getPasswordList(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.getPasswordList(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::generatePassword", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::generatePassword(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.generatePassword(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::startListening", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.VerifierListener var1 = (com.iflytek.cloud.VerifierListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::startListening(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startListening(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::stopListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::stopListening(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::isListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::isListening(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeakerVerifier::sendRequest", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.SpeechListener var3 = (com.iflytek.cloud.SpeechListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeakerVerifier ref = (com.iflytek.cloud.SpeakerVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeakerVerifier@" + refId + "::sendRequest(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.sendRequest(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.ui.RecognizerDialogListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.RecognizerResult var1 = (com.iflytek.cloud.RecognizerResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.ui.RecognizerDialogListener ref = (com.iflytek.cloud.ui.RecognizerDialogListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.ui.RecognizerDialogListener@" + refId + "::onResult(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.ui.RecognizerDialogListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.ui.RecognizerDialogListener ref = (com.iflytek.cloud.ui.RecognizerDialogListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.ui.RecognizerDialogListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.GrammarListener::onBuildFinish", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            com.iflytek.cloud.SpeechError var2 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.GrammarListener ref = (com.iflytek.cloud.GrammarListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.GrammarListener@" + refId + "::onBuildFinish(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onBuildFinish(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechTranscripter::createTranscripter", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter::createTranscripter(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechTranscripter result;
            try {
                result = com.iflytek.cloud.SpeechTranscripter.createTranscripter(var0, new com.iflytek.cloud.InitListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechTranscripter::createTranscripter::Callback");
        
                // call dart method
                @Override
                public void onInit(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.InitListener::onInit",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechTranscripter::getTranscripter", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter::getTranscripter(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechTranscripter result;
            try {
                result = com.iflytek.cloud.SpeechTranscripter.getTranscripter();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechTranscripter::startTranscripting", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.TranscripterListener var1 = (com.iflytek.cloud.TranscripterListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::startTranscripting(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startTranscripting(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechTranscripter::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechTranscripter::stopTranscripting", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::stopTranscripting(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopTranscripting();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechTranscripter::isTranscripting", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::isTranscripting(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isTranscripting();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechTranscripter::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechTranscripter ref = (com.iflytek.cloud.SpeechTranscripter) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechTranscripter@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SynthesizerListener::onSpeakBegin", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SynthesizerListener ref = (com.iflytek.cloud.SynthesizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SynthesizerListener@" + refId + "::onSpeakBegin(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onSpeakBegin();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SynthesizerListener::onBufferProgress", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SynthesizerListener ref = (com.iflytek.cloud.SynthesizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SynthesizerListener@" + refId + "::onBufferProgress(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onBufferProgress(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SynthesizerListener::onSpeakPaused", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SynthesizerListener ref = (com.iflytek.cloud.SynthesizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SynthesizerListener@" + refId + "::onSpeakPaused(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onSpeakPaused();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SynthesizerListener::onSpeakResumed", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SynthesizerListener ref = (com.iflytek.cloud.SynthesizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SynthesizerListener@" + refId + "::onSpeakResumed(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onSpeakResumed();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SynthesizerListener::onSpeakProgress", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SynthesizerListener ref = (com.iflytek.cloud.SynthesizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SynthesizerListener@" + refId + "::onSpeakProgress(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.onSpeakProgress(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SynthesizerListener::onCompleted", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SynthesizerListener ref = (com.iflytek.cloud.SynthesizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SynthesizerListener@" + refId + "::onCompleted(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onCompleted(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SynthesizerListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SynthesizerListener ref = (com.iflytek.cloud.SynthesizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SynthesizerListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.LexiconListener::onLexiconUpdated", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            com.iflytek.cloud.SpeechError var2 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.LexiconListener ref = (com.iflytek.cloud.LexiconListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.LexiconListener@" + refId + "::onLexiconUpdated(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onLexiconUpdated(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.record.PcmRecorder::stopRecord", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.record.PcmRecorder ref = (com.iflytek.cloud.record.PcmRecorder) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder@" + refId + "::stopRecord(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.stopRecord(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.record.PcmRecorder::startRecording", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.record.PcmRecorder.PcmRecordListener var1 = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.record.PcmRecorder ref = (com.iflytek.cloud.record.PcmRecorder) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder@" + refId + "::startRecording(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.startRecording(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.record.PcmRecorder::run", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.record.PcmRecorder ref = (com.iflytek.cloud.record.PcmRecorder) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder@" + refId + "::run(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.run();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onRecordBuffer", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.record.PcmRecorder.PcmRecordListener ref = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder.PcmRecordListener@" + refId + "::onRecordBuffer(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.onRecordBuffer(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.record.PcmRecorder.PcmRecordListener ref = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder.PcmRecordListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onRecordStarted", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.record.PcmRecorder.PcmRecordListener ref = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder.PcmRecordListener@" + refId + "::onRecordStarted(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onRecordStarted(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.record.PcmRecorder.PcmRecordListener::onRecordReleased", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.record.PcmRecorder.PcmRecordListener ref = (com.iflytek.cloud.record.PcmRecorder.PcmRecordListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.record.PcmRecorder.PcmRecordListener@" + refId + "::onRecordReleased(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onRecordReleased();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.IdentityVerifier::createVerifier", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier::createVerifier(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.IdentityVerifier result;
            try {
                result = com.iflytek.cloud.IdentityVerifier.createVerifier(var0, new com.iflytek.cloud.InitListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.IdentityVerifier::createVerifier::Callback");
        
                // call dart method
                @Override
                public void onInit(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.InitListener::onInit",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.IdentityVerifier::getVerifier", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier::getVerifier(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.IdentityVerifier result;
            try {
                result = com.iflytek.cloud.IdentityVerifier.getVerifier();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.IdentityVerifier::startWorking", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.IdentityListener var1 = (com.iflytek.cloud.IdentityListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::startWorking(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startWorking(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.IdentityVerifier::writeData", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
            // jsonable arg
            int var5 = (int) args.get("var5");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::writeData(" + var1 + var2 + var3 + var4 + var5 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeData(var1, var2, var3, var4, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.IdentityVerifier::stopWrite", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::stopWrite(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.stopWrite(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.IdentityVerifier::execute", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // ref arg
            com.iflytek.cloud.IdentityListener var4 = (com.iflytek.cloud.IdentityListener) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::execute(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.execute(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.IdentityVerifier::isWorking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::isWorking(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isWorking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.IdentityVerifier::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityVerifier ref = (com.iflytek.cloud.IdentityVerifier) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityVerifier@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.Accelerometer.CLOCKWISE_ANGLE::getValue", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.Accelerometer.CLOCKWISE_ANGLE ref = (com.iflytek.cloud.util.Accelerometer.CLOCKWISE_ANGLE) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.Accelerometer.CLOCKWISE_ANGLE@" + refId + "::getValue(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getValue();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.AudioDetector::destroy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector ref = (com.iflytek.cloud.util.AudioDetector) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.AudioDetector@" + refId + "::destroy(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.destroy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.AudioDetector::reset", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector ref = (com.iflytek.cloud.util.AudioDetector) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.AudioDetector@" + refId + "::reset(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.reset();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.AudioDetector::detect", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            boolean var4 = (boolean) args.get("var4");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector ref = (com.iflytek.cloud.util.AudioDetector) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.AudioDetector@" + refId + "::detect(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.util.AudioDetector.DetectorResult result;
            try {
                result = ref.detect(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.util.AudioDetector::setParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.AudioDetector ref = (com.iflytek.cloud.util.AudioDetector) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.AudioDetector@" + refId + "::setParameter(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.setParameter(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.UserWords::hasKey", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::hasKey(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.hasKey(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.UserWords::putWord__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::putWord(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.putWord(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.UserWords::putWord__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::putWord(" + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.putWord(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.UserWords::putWords__String", (args, methodResult) -> {
            // args
            // jsonable arg
            List<String> var1 = (List<String>) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::putWords(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.putWords(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.UserWords::putWords__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            List<String> var2 = (List<String>) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::putWords(" + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.putWords(var1, new ArrayList(var2));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.UserWords::getWords", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::getWords(" + "" + ")");
            }
        
            // invoke native method
            List<String> result;
            try {
                result = ref.getWords();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.UserWords::getKeys", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::getKeys(" + "" + ")");
            }
        
            // invoke native method
            List<String> result;
            try {
                result = ref.getKeys();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.UserWords::getWords__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.UserWords ref = (com.iflytek.cloud.util.UserWords) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.UserWords@" + refId + "::getWords(" + var1 + ")");
            }
        
            // invoke native method
            List<String> result;
            try {
                result = ref.getWords(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.VerifierUtil::generateNumberPassword", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.VerifierUtil::generateNumberPassword(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.util.VerifierUtil.generateNumberPassword(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.VerifierUtil::ARGB2Gray", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Bitmap var0 = (android.graphics.Bitmap) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.VerifierUtil::ARGB2Gray(" + var0 + ")");
            }
        
            // invoke native method
            android.graphics.Bitmap result;
            try {
                result = com.iflytek.cloud.util.VerifierUtil.ARGB2Gray(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.util.VerifierUtil::getBitmapsize", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Bitmap var0 = (android.graphics.Bitmap) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.VerifierUtil::getBitmapsize(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.util.VerifierUtil.getBitmapsize(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.ContactManager.ContactListener::onContactQueryFinish", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.ContactManager.ContactListener ref = (com.iflytek.cloud.util.ContactManager.ContactListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.ContactManager.ContactListener@" + refId + "::onContactQueryFinish(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onContactQueryFinish(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.ResourceUtil::generateResourcePath", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // enum arg
            com.iflytek.cloud.util.ResourceUtil.RESOURCE_TYPE var1 = com.iflytek.cloud.util.ResourceUtil.RESOURCE_TYPE.values()[(int) args.get("var1")];
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.ResourceUtil::generateResourcePath(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.util.ResourceUtil.generateResourcePath(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.Accelerometer::start", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.Accelerometer ref = (com.iflytek.cloud.util.Accelerometer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.Accelerometer@" + refId + "::start(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.start();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.Accelerometer::stop", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.Accelerometer ref = (com.iflytek.cloud.util.Accelerometer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.Accelerometer@" + refId + "::stop(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stop();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.Accelerometer::getDirection", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.Accelerometer::getDirection(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.util.Accelerometer.getDirection();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.ContactManager::destroy", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.ContactManager::destroy(" + "" + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.util.ContactManager.destroy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.ContactManager::queryAllContactsName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.ContactManager ref = (com.iflytek.cloud.util.ContactManager) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.ContactManager@" + refId + "::queryAllContactsName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.queryAllContactsName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.ContactManager::asyncQueryAllContactsName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.ContactManager ref = (com.iflytek.cloud.util.ContactManager) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.ContactManager@" + refId + "::asyncQueryAllContactsName(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.asyncQueryAllContactsName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.VolumeUtil::computeVolume", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.VolumeUtil::computeVolume(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.util.VolumeUtil.computeVolume(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.util.FileDownloadListener::onStart", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.FileDownloadListener ref = (com.iflytek.cloud.util.FileDownloadListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.FileDownloadListener@" + refId + "::onStart(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onStart();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.FileDownloadListener::onProgress", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.FileDownloadListener ref = (com.iflytek.cloud.util.FileDownloadListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.FileDownloadListener@" + refId + "::onProgress(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onProgress(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.util.FileDownloadListener::onCompleted", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            com.iflytek.cloud.SpeechError var2 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.util.FileDownloadListener ref = (com.iflytek.cloud.util.FileDownloadListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.util.FileDownloadListener@" + refId + "::onCompleted(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onCompleted(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.FaceRequest::sendRequest", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // ref arg
            com.iflytek.cloud.RequestListener var2 = (com.iflytek.cloud.RequestListener) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.FaceRequest ref = (com.iflytek.cloud.FaceRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + refId + "::sendRequest(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.sendRequest(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.FaceRequest::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.FaceRequest ref = (com.iflytek.cloud.FaceRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceRequest@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // ref arg
            android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechListener ref = (com.iflytek.cloud.SpeechListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechListener@" + refId + "::onEvent(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechListener::onBufferReceived", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechListener ref = (com.iflytek.cloud.SpeechListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechListener@" + refId + "::onBufferReceived(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onBufferReceived(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechListener::onCompleted", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechListener ref = (com.iflytek.cloud.SpeechListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechListener@" + refId + "::onCompleted(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onCompleted(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechUtility::createUtility", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility::createUtility(" + var0 + var1 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechUtility result;
            try {
                result = com.iflytek.cloud.SpeechUtility.createUtility(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechUtility::getUtility", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility::getUtility(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechUtility result;
            try {
                result = com.iflytek.cloud.SpeechUtility.getUtility();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechUtility::checkServiceInstalled", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::checkServiceInstalled(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.checkServiceInstalled();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechUtility::queryAvailableEngines", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::queryAvailableEngines(" + "" + ")");
            }
        
            // invoke native method
            String[] result;
            try {
                result = ref.queryAvailableEngines();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(new ArrayList<String>(java.util.Arrays.asList(result)));
        });
        // method
        put("com.iflytek.cloud.SpeechUtility::openEngineSettings", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::openEngineSettings(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.openEngineSettings(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechUtility::getComponentUrl", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::getComponentUrl(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getComponentUrl();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechUtility::getPlusLocalInfo", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::getPlusLocalInfo(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPlusLocalInfo(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechUtility::getServiceVersion", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUtility ref = (com.iflytek.cloud.SpeechUtility) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUtility@" + refId + "::getServiceVersion(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getServiceVersion();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechSynthesizer::createSynthesizer", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer::createSynthesizer(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechSynthesizer result;
            try {
                result = com.iflytek.cloud.SpeechSynthesizer.createSynthesizer(var0, new com.iflytek.cloud.InitListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechSynthesizer::createSynthesizer::Callback");
        
                // call dart method
                @Override
                public void onInit(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.InitListener::onInit",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechSynthesizer::getSynthesizer", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer::getSynthesizer(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechSynthesizer result;
            try {
                result = com.iflytek.cloud.SpeechSynthesizer.getSynthesizer();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechSynthesizer::startSpeaking", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::startSpeaking(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startSpeaking(var1, new com.iflytek.cloud.SynthesizerListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechSynthesizer::startSpeaking::Callback");
        
                // call dart method
                @Override
                public void onSpeakBegin() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakBegin(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakBegin",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onBufferProgress(int var1, int var2, int var3, String var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBufferProgress(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // jsonable arg
                    String argvar4 = var4;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onBufferProgress",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakPaused() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakPaused(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakPaused",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakResumed() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakResumed(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakResumed",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakProgress(int var1, int var2, int var3) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakProgress(" + var1 + var2 + var3 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakProgress",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onCompleted",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // ref arg
                    int argvar4 = var4.hashCode();
                    getHEAP().put(argvar4, var4);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onEvent",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechSynthesizer::synthesizeToUri", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::synthesizeToUri(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.synthesizeToUri(var1, var2, new com.iflytek.cloud.SynthesizerListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechSynthesizer::synthesizeToUri::Callback");
        
                // call dart method
                @Override
                public void onSpeakBegin() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakBegin(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakBegin",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onBufferProgress(int var1, int var2, int var3, String var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBufferProgress(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // jsonable arg
                    String argvar4 = var4;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onBufferProgress",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakPaused() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakPaused(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakPaused",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakResumed() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakResumed(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakResumed",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakProgress(int var1, int var2, int var3) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakProgress(" + var1 + var2 + var3 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakProgress",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onCompleted",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // ref arg
                    int argvar4 = var4.hashCode();
                    getHEAP().put(argvar4, var4);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onEvent",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechSynthesizer::pauseSpeaking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::pauseSpeaking(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.pauseSpeaking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechSynthesizer::resumeSpeaking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::resumeSpeaking(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.resumeSpeaking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechSynthesizer::stopSpeaking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::stopSpeaking(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopSpeaking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechSynthesizer::isSpeaking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechSynthesizer ref = (com.iflytek.cloud.SpeechSynthesizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechSynthesizer@" + refId + "::isSpeaking(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isSpeaking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.IdentityResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityResult ref = (com.iflytek.cloud.IdentityResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstanderListener::onVolumeChanged", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstanderListener ref = (com.iflytek.cloud.SpeechUnderstanderListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstanderListener@" + refId + "::onVolumeChanged(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onVolumeChanged(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstanderListener::onBeginOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstanderListener ref = (com.iflytek.cloud.SpeechUnderstanderListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstanderListener@" + refId + "::onBeginOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onBeginOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstanderListener::onEndOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstanderListener ref = (com.iflytek.cloud.SpeechUnderstanderListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstanderListener@" + refId + "::onEndOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onEndOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstanderListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.UnderstanderResult var1 = (com.iflytek.cloud.UnderstanderResult) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstanderListener ref = (com.iflytek.cloud.SpeechUnderstanderListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstanderListener@" + refId + "::onResult(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstanderListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstanderListener ref = (com.iflytek.cloud.SpeechUnderstanderListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstanderListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstanderListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstanderListener ref = (com.iflytek.cloud.SpeechUnderstanderListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstanderListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.TextUnderstander::createTextUnderstander", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander::createTextUnderstander(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.TextUnderstander result;
            try {
                result = com.iflytek.cloud.TextUnderstander.createTextUnderstander(var0, new com.iflytek.cloud.InitListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.TextUnderstander::createTextUnderstander::Callback");
        
                // call dart method
                @Override
                public void onInit(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.InitListener::onInit",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.TextUnderstander::getTextUnderstander", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander::getTextUnderstander(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.TextUnderstander result;
            try {
                result = com.iflytek.cloud.TextUnderstander.getTextUnderstander();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.TextUnderstander::understandText", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TextUnderstander ref = (com.iflytek.cloud.TextUnderstander) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander@" + refId + "::understandText(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.understandText(var1, new com.iflytek.cloud.TextUnderstanderListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.TextUnderstander::understandText::Callback");
        
                // call dart method
                @Override
                public void onResult(com.iflytek.cloud.UnderstanderResult var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.TextUnderstanderListener::onResult",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onError(com.iflytek.cloud.SpeechError var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.TextUnderstanderListener::onError",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.TextUnderstander::isUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TextUnderstander ref = (com.iflytek.cloud.TextUnderstander) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander@" + refId + "::isUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isUnderstanding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.TextUnderstander::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TextUnderstander ref = (com.iflytek.cloud.TextUnderstander) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstander@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.VoiceWakeuperImpl::queryResource", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
            // ref arg
            com.iflytek.cloud.RequestListener var3 = (com.iflytek.cloud.RequestListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.VoiceWakeuperImpl ref = (com.iflytek.cloud.speech.impl.VoiceWakeuperImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.VoiceWakeuperImpl@" + refId + "::queryResource(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.queryResource(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.VoiceWakeuperImpl::downloadResource", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            boolean var4 = (boolean) args.get("var4");
            // ref arg
            com.iflytek.cloud.util.FileDownloadListener var5 = (com.iflytek.cloud.util.FileDownloadListener) getHEAP().get((int) args.get("var5"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.VoiceWakeuperImpl ref = (com.iflytek.cloud.speech.impl.VoiceWakeuperImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.VoiceWakeuperImpl@" + refId + "::downloadResource(" + var1 + var2 + var3 + var4 + var5 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.downloadResource(var1, var2, var3, var4, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.VoiceWakeuperImpl::startListening", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.WakeuperListener var1 = (com.iflytek.cloud.WakeuperListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.VoiceWakeuperImpl ref = (com.iflytek.cloud.speech.impl.VoiceWakeuperImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.VoiceWakeuperImpl@" + refId + "::startListening(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startListening(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.VoiceWakeuperImpl::restartWorking__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.VoiceWakeuperImpl ref = (com.iflytek.cloud.speech.impl.VoiceWakeuperImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.VoiceWakeuperImpl@" + refId + "::restartWorking(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.restartWorking(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.VoiceWakeuperImpl::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.VoiceWakeuperImpl ref = (com.iflytek.cloud.speech.impl.VoiceWakeuperImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.VoiceWakeuperImpl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.VoiceWakeuperImpl::stopListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.VoiceWakeuperImpl ref = (com.iflytek.cloud.speech.impl.VoiceWakeuperImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.VoiceWakeuperImpl@" + refId + "::stopListening(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.VoiceWakeuperImpl::isListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.VoiceWakeuperImpl ref = (com.iflytek.cloud.speech.impl.VoiceWakeuperImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.VoiceWakeuperImpl@" + refId + "::isListening(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechTranscripterImpl::pushSessionInfo", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl ref = (com.iflytek.cloud.speech.impl.SpeechTranscripterImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechTranscripterImpl@" + refId + "::pushSessionInfo(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.pushSessionInfo(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechTranscripterImpl::startTranscripting", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.TranscripterListener var1 = (com.iflytek.cloud.TranscripterListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl ref = (com.iflytek.cloud.speech.impl.SpeechTranscripterImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechTranscripterImpl@" + refId + "::startTranscripting(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startTranscripting(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechTranscripterImpl::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl ref = (com.iflytek.cloud.speech.impl.SpeechTranscripterImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechTranscripterImpl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechTranscripterImpl::stopTranscripting", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl ref = (com.iflytek.cloud.speech.impl.SpeechTranscripterImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechTranscripterImpl@" + refId + "::stopTranscripting(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopTranscripting();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechTranscripterImpl::isTranscripting", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl ref = (com.iflytek.cloud.speech.impl.SpeechTranscripterImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechTranscripterImpl@" + refId + "::isTranscripting(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isTranscripting();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechTranscripterImpl::getSessionID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl ref = (com.iflytek.cloud.speech.impl.SpeechTranscripterImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechTranscripterImpl@" + refId + "::getSessionID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSessionID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechTranscripterImpl::getUploadBytes", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl ref = (com.iflytek.cloud.speech.impl.SpeechTranscripterImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechTranscripterImpl@" + refId + "::getUploadBytes(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getUploadBytes();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechTranscripterImpl::getSyncID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl ref = (com.iflytek.cloud.speech.impl.SpeechTranscripterImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechTranscripterImpl@" + refId + "::getSyncID(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getSyncID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechTranscripterImpl::getAudioPath", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl ref = (com.iflytek.cloud.speech.impl.SpeechTranscripterImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechTranscripterImpl@" + refId + "::getAudioPath(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAudioPath();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.TextUnderstanderImpl::understandText", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.TextUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.TextUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.TextUnderstanderImpl@" + refId + "::understandText(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.understandText(var1, new com.iflytek.cloud.TextUnderstanderListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.speech.impl.TextUnderstanderImpl::understandText::Callback");
        
                // call dart method
                @Override
                public void onResult(com.iflytek.cloud.UnderstanderResult var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.TextUnderstanderListener::onResult",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onError(com.iflytek.cloud.SpeechError var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.TextUnderstanderListener::onError",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.TextUnderstanderImpl::isUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.TextUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.TextUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.TextUnderstanderImpl@" + refId + "::isUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isUnderstanding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.IdentityVerifierImpl::pushSessionInfo", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.IdentityVerifierImpl ref = (com.iflytek.cloud.speech.impl.IdentityVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.IdentityVerifierImpl@" + refId + "::pushSessionInfo(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.pushSessionInfo(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.IdentityVerifierImpl::startWorking", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.IdentityListener var1 = (com.iflytek.cloud.IdentityListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.IdentityVerifierImpl ref = (com.iflytek.cloud.speech.impl.IdentityVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.IdentityVerifierImpl@" + refId + "::startWorking(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startWorking(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.IdentityVerifierImpl::writeData", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
            // jsonable arg
            int var5 = (int) args.get("var5");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.IdentityVerifierImpl ref = (com.iflytek.cloud.speech.impl.IdentityVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.IdentityVerifierImpl@" + refId + "::writeData(" + var1 + var2 + var3 + var4 + var5 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeData(var1, var2, var3, var4, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.IdentityVerifierImpl::stopWrite", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.IdentityVerifierImpl ref = (com.iflytek.cloud.speech.impl.IdentityVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.IdentityVerifierImpl@" + refId + "::stopWrite(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.stopWrite(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.IdentityVerifierImpl::execute", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // ref arg
            com.iflytek.cloud.IdentityListener var4 = (com.iflytek.cloud.IdentityListener) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.IdentityVerifierImpl ref = (com.iflytek.cloud.speech.impl.IdentityVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.IdentityVerifierImpl@" + refId + "::execute(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.execute(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.IdentityVerifierImpl::isWorking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.IdentityVerifierImpl ref = (com.iflytek.cloud.speech.impl.IdentityVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.IdentityVerifierImpl@" + refId + "::isWorking(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isWorking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.FaceDetectorImpl::detectARGB", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.FaceDetectorImpl ref = (com.iflytek.cloud.speech.impl.FaceDetectorImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.FaceDetectorImpl@" + refId + "::detectARGB(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.detectARGB(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.FaceDetectorImpl::detectGray", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.FaceDetectorImpl ref = (com.iflytek.cloud.speech.impl.FaceDetectorImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.FaceDetectorImpl@" + refId + "::detectGray(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.detectGray(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.FaceDetectorImpl::trackNV21", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
            // jsonable arg
            int var5 = (int) args.get("var5");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.FaceDetectorImpl ref = (com.iflytek.cloud.speech.impl.FaceDetectorImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.FaceDetectorImpl@" + refId + "::trackNV21(" + var1 + var2 + var3 + var4 + var5 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.trackNV21(var1, var2, var3, var4, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.FaceDetectorImpl::destroy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.FaceDetectorImpl ref = (com.iflytek.cloud.speech.impl.FaceDetectorImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.FaceDetectorImpl@" + refId + "::destroy(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.destroy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::startSpeaking", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::startSpeaking(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startSpeaking(var1, new com.iflytek.cloud.SynthesizerListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::startSpeaking::Callback");
        
                // call dart method
                @Override
                public void onSpeakBegin() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakBegin(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakBegin",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onBufferProgress(int var1, int var2, int var3, String var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBufferProgress(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // jsonable arg
                    String argvar4 = var4;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onBufferProgress",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakPaused() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakPaused(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakPaused",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakResumed() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakResumed(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakResumed",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakProgress(int var1, int var2, int var3) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakProgress(" + var1 + var2 + var3 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakProgress",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onCompleted",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // ref arg
                    int argvar4 = var4.hashCode();
                    getHEAP().put(argvar4, var4);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onEvent",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::synthesizeToUri", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::synthesizeToUri(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.synthesizeToUri(var1, var2, new com.iflytek.cloud.SynthesizerListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::synthesizeToUri::Callback");
        
                // call dart method
                @Override
                public void onSpeakBegin() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakBegin(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakBegin",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onBufferProgress(int var1, int var2, int var3, String var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBufferProgress(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // jsonable arg
                    String argvar4 = var4;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onBufferProgress",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakPaused() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakPaused(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakPaused",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakResumed() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakResumed(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakResumed",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onSpeakProgress(int var1, int var2, int var3) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onSpeakProgress(" + var1 + var2 + var3 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onSpeakProgress",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onCompleted(com.iflytek.cloud.SpeechError var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCompleted(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onCompleted",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // ref arg
                    int argvar4 = var4.hashCode();
                    getHEAP().put(argvar4, var4);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SynthesizerListener::onEvent",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::pauseSpeaking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::pauseSpeaking(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.pauseSpeaking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::replaySpeaking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::replaySpeaking(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.replaySpeaking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::resumeSpeaking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::resumeSpeaking(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.resumeSpeaking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::isSpeaking", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::isSpeaking(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isSpeaking();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::getState", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::getState(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getState();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::stopSpeaking", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::stopSpeaking(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.stopSpeaking(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::getDownflowBytes", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::getDownflowBytes(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getDownflowBytes(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl::getUpflowBytes", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl@" + refId + "::getUpflowBytes(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getUpflowBytes(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechRecognizerImpl::pushSessionInfo", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechRecognizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechRecognizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechRecognizerImpl@" + refId + "::pushSessionInfo(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.pushSessionInfo(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechRecognizerImpl::startListening", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.RecognizerListener var1 = (com.iflytek.cloud.RecognizerListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechRecognizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechRecognizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechRecognizerImpl@" + refId + "::startListening(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startListening(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechRecognizerImpl::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechRecognizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechRecognizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechRecognizerImpl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechRecognizerImpl::stopListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechRecognizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechRecognizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechRecognizerImpl@" + refId + "::stopListening(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechRecognizerImpl::isListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechRecognizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechRecognizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechRecognizerImpl@" + refId + "::isListening(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechRecognizerImpl::buildGrammar", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.GrammarListener var3 = (com.iflytek.cloud.GrammarListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechRecognizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechRecognizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechRecognizerImpl@" + refId + "::buildGrammar(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.buildGrammar(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechRecognizerImpl::updateLexicon", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.LexiconListener var3 = (com.iflytek.cloud.LexiconListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechRecognizerImpl ref = (com.iflytek.cloud.speech.impl.SpeechRecognizerImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechRecognizerImpl@" + refId + "::updateLexicon(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.updateLexicon(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::createUnderstander", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::createUnderstander(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl result;
            try {
                result = com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl.createUnderstander(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::getUnderstander", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::getUnderstander(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl result;
            try {
                result = com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl.getUnderstander();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::startUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl@" + refId + "::startUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startUnderstanding(new com.iflytek.cloud.SpeechUnderstanderListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::startUnderstanding::Callback");
        
                // call dart method
                @Override
                public void onVolumeChanged(int var1, byte[] var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onVolumeChanged(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    byte[] argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onVolumeChanged",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onBeginOfSpeech() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBeginOfSpeech(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onBeginOfSpeech",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onEndOfSpeech() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onEndOfSpeech(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onEndOfSpeech",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onResult(com.iflytek.cloud.UnderstanderResult var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onResult",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onError(com.iflytek.cloud.SpeechError var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onError",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // ref arg
                    int argvar4 = var4.hashCode();
                    getHEAP().put(argvar4, var4);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onEvent",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::isUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl@" + refId + "::isUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isUnderstanding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::stopUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl@" + refId + "::stopUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopUnderstanding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::cancel", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl@" + refId + "::cancel(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.cancel(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::setParameter__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl@" + refId + "::setParameter(" + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.setParameter(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::getParameter", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl@" + refId + "::getParameter(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getParameter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl::destroy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl ref = (com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl@" + refId + "::destroy(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.destroy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.FaceRequestImpl::sendRequest", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // ref arg
            com.iflytek.cloud.RequestListener var2 = (com.iflytek.cloud.RequestListener) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.FaceRequestImpl ref = (com.iflytek.cloud.speech.impl.FaceRequestImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.FaceRequestImpl@" + refId + "::sendRequest(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.sendRequest(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.FaceRequestImpl::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.FaceRequestImpl ref = (com.iflytek.cloud.speech.impl.FaceRequestImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.FaceRequestImpl@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeakerVerifierImpl::startListening", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.VerifierListener var1 = (com.iflytek.cloud.VerifierListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeakerVerifierImpl ref = (com.iflytek.cloud.speech.impl.SpeakerVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeakerVerifierImpl@" + refId + "::startListening(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startListening(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeakerVerifierImpl::stopListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeakerVerifierImpl ref = (com.iflytek.cloud.speech.impl.SpeakerVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeakerVerifierImpl@" + refId + "::stopListening(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeakerVerifierImpl::getPasswordList", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechListener var1 = (com.iflytek.cloud.SpeechListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeakerVerifierImpl ref = (com.iflytek.cloud.speech.impl.SpeakerVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeakerVerifierImpl@" + refId + "::getPasswordList(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.getPasswordList(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeakerVerifierImpl::generatePassword", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeakerVerifierImpl ref = (com.iflytek.cloud.speech.impl.SpeakerVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeakerVerifierImpl@" + refId + "::generatePassword(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.generatePassword(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeakerVerifierImpl::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeakerVerifierImpl ref = (com.iflytek.cloud.speech.impl.SpeakerVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeakerVerifierImpl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeakerVerifierImpl::isListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeakerVerifierImpl ref = (com.iflytek.cloud.speech.impl.SpeakerVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeakerVerifierImpl@" + refId + "::isListening(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeakerVerifierImpl::sendRequest", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.SpeechListener var3 = (com.iflytek.cloud.SpeechListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeakerVerifierImpl ref = (com.iflytek.cloud.speech.impl.SpeakerVerifierImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeakerVerifierImpl@" + refId + "::sendRequest(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.sendRequest(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl::startEvaluating__String__String__com_iflytek_cloud_EvaluatorListener", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.EvaluatorListener var3 = (com.iflytek.cloud.EvaluatorListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl ref = (com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl@" + refId + "::startEvaluating(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startEvaluating(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl::startEvaluating__Uint8List__String__com_iflytek_cloud_EvaluatorListener", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.EvaluatorListener var3 = (com.iflytek.cloud.EvaluatorListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl ref = (com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl@" + refId + "::startEvaluating(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startEvaluating(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl ref = (com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl::stopEvaluating", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl ref = (com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl@" + refId + "::stopEvaluating(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopEvaluating();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl::isEvaluating", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl ref = (com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl@" + refId + "::isEvaluating(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isEvaluating();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.EvaluatorListener::onVolumeChanged", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.EvaluatorListener ref = (com.iflytek.cloud.EvaluatorListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.EvaluatorListener@" + refId + "::onVolumeChanged(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onVolumeChanged(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.EvaluatorListener::onBeginOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.EvaluatorListener ref = (com.iflytek.cloud.EvaluatorListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.EvaluatorListener@" + refId + "::onBeginOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onBeginOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.EvaluatorListener::onEndOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.EvaluatorListener ref = (com.iflytek.cloud.EvaluatorListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.EvaluatorListener@" + refId + "::onEndOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onEndOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.EvaluatorListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.EvaluatorResult var1 = (com.iflytek.cloud.EvaluatorResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.EvaluatorListener ref = (com.iflytek.cloud.EvaluatorListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.EvaluatorListener@" + refId + "::onResult(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.EvaluatorListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.EvaluatorListener ref = (com.iflytek.cloud.EvaluatorListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.EvaluatorListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.EvaluatorListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.EvaluatorListener ref = (com.iflytek.cloud.EvaluatorListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.EvaluatorListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.RecognizerListener::onVolumeChanged", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RecognizerListener ref = (com.iflytek.cloud.RecognizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RecognizerListener@" + refId + "::onVolumeChanged(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onVolumeChanged(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.RecognizerListener::onBeginOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RecognizerListener ref = (com.iflytek.cloud.RecognizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RecognizerListener@" + refId + "::onBeginOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onBeginOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.RecognizerListener::onEndOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RecognizerListener ref = (com.iflytek.cloud.RecognizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RecognizerListener@" + refId + "::onEndOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onEndOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.RecognizerListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.RecognizerResult var1 = (com.iflytek.cloud.RecognizerResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RecognizerListener ref = (com.iflytek.cloud.RecognizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RecognizerListener@" + refId + "::onResult(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.RecognizerListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RecognizerListener ref = (com.iflytek.cloud.RecognizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RecognizerListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.RecognizerListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RecognizerListener ref = (com.iflytek.cloud.RecognizerListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RecognizerListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.FuncAdapterSdk10::avoidSystemError", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.FuncAdapterSdk10 ref = (com.iflytek.cloud.msc.util.FuncAdapterSdk10) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.FuncAdapterSdk10@" + refId + "::avoidSystemError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.avoidSystemError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.FuncAdapterSdk10::CloseHardWareAccelerate", (args, methodResult) -> {
            // args
            // ref arg
            android.view.View var0 = (android.view.View) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.FuncAdapterSdk10::CloseHardWareAccelerate(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.FuncAdapterSdk10.CloseHardWareAccelerate(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.NetworkUtil::isWifiConnect", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::isWifiConnect(" + var0 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.msc.util.NetworkUtil.isWifiConnect(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.NetworkUtil::checkNetwork", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::checkNetwork(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.NetworkUtil.checkNetwork(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.NetworkUtil::isNetworkAvailable", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::isNetworkAvailable(" + var0 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.msc.util.NetworkUtil.isNetworkAvailable(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.NetworkUtil::ip2int", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::ip2int(" + var0 + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = com.iflytek.cloud.msc.util.NetworkUtil.ip2int(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.NetworkUtil::int2ip", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.NetworkUtil::int2ip(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.NetworkUtil.int2ip(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Base64::encode", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Base64::encode(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.Base64.encode(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Base64::decode", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Base64::decode(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.Base64.decode(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::getComplexDateTime", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getComplexDateTime(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.getComplexDateTime(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::getSimpleDateTime", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getSimpleDateTime(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.getSimpleDateTime(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::readInt", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::readInt(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.readInt(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::byteToLong", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::byteToLong(" + var0 + var1 + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.byteToLong(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::longToByte", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::longToByte(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.longToByte(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::RandomInt", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::RandomInt(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.RandomInt(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::hexstring2Int", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::hexstring2Int(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.hexstring2Int(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::dip2px", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::dip2px(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.dip2px(var0, new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::sp2px", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::sp2px(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.sp2px(var0, new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::spModify", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::spModify(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.spModify(var0, new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::getUTF8Bom__Uint8List", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getUTF8Bom(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.getUTF8Bom(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::getUTF8Bom__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getUTF8Bom(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.getUTF8Bom(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::getNativeByteArray__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getNativeByteArray(" + var0 + var1 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.getNativeByteArray(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::getNativeByteArray__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getNativeByteArray(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.getNativeByteArray(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::getStringFromNativeByteArray__Uint8List__String", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getStringFromNativeByteArray(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.getStringFromNativeByteArray(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataUtil::getStringFromNativeByteArray__Uint8List", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataUtil::getStringFromNativeByteArray(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.DataUtil.getStringFromNativeByteArray(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Encrypter::lightcode", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::lightcode(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.Encrypter.lightcode(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Encrypter::zip5xEncode", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::zip5xEncode(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.Encrypter.zip5xEncode(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Encrypter::zip5xDecode", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::zip5xDecode(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.Encrypter.zip5xDecode(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Encrypter::MD5", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::MD5(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.Encrypter.MD5(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Encrypter::cut16MD5", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::cut16MD5(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.Encrypter.cut16MD5(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Encrypter::encrypt", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::encrypt(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.Encrypter.encrypt(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Encrypter::intToByteArray", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::intToByteArray(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.Encrypter.intToByteArray(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Encrypter::byteArrayToInt", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Encrypter::byteArrayToInt(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.msc.util.Encrypter.byteArrayToInt(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AppInfoUtil::getCarrier", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getCarrier(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AppInfoUtil.getCarrier(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AppInfoUtil::getMac", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getMac(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AppInfoUtil.getMac(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AppInfoUtil::getBrowserUserAgent", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getBrowserUserAgent(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AppInfoUtil.getBrowserUserAgent(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AppInfoUtil::getDeviceType", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getDeviceType(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AppInfoUtil.getDeviceType(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AppInfoUtil::checkAndReplaceIllegalSymbols", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::checkAndReplaceIllegalSymbols(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AppInfoUtil.checkAndReplaceIllegalSymbols(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AppInfoUtil::getActivityMsg", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AppInfoUtil::getActivityMsg(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AppInfoUtil.getActivityMsg(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.DataLogger::addData", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.DataLogger ref = (com.iflytek.cloud.msc.util.DataLogger) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataLogger@" + refId + "::addData(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.addData(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.DataLogger::saveToFile", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.DataLogger ref = (com.iflytek.cloud.msc.util.DataLogger) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.DataLogger@" + refId + "::saveToFile(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.saveToFile();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.SDCardHelper::checkSDCardStatus", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.SDCardHelper::checkSDCardStatus(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.msc.util.SDCardHelper.checkSDCardStatus();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.SDCardHelper::getExternalStorageDirectory", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.SDCardHelper::getExternalStorageDirectory(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.SDCardHelper.getExternalStorageDirectory();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.SDCardHelper::getAvailableSpace", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.SDCardHelper::getAvailableSpace(" + var0 + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = com.iflytek.cloud.msc.util.SDCardHelper.getAvailableSpace(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.SDCardHelper::getAvaliableMemSpace", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.SDCardHelper::getAvaliableMemSpace(" + var0 + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = com.iflytek.cloud.msc.util.SDCardHelper.getAvaliableMemSpace(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpDownloadListener::onStart", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
            // jsonable arg
            String var5 = (String) args.get("var5");
            // ref arg
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl var6 = (com.iflytek.cloud.msc.util.http.HttpDownloadImpl) getHEAP().get((int) args.get("var6"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpDownloadListener ref = (com.iflytek.cloud.msc.util.http.HttpDownloadListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpDownloadListener@" + refId + "::onStart(" + var1 + var3 + var4 + var5 + var6 + ")");
            }
        
            // invoke native method
            try {
                ref.onStart(var1, var3, var4, var5, var6);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpDownloadListener::onProgress", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl var4 = (com.iflytek.cloud.msc.util.http.HttpDownloadImpl) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpDownloadListener ref = (com.iflytek.cloud.msc.util.http.HttpDownloadListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpDownloadListener@" + refId + "::onProgress(" + var1 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onProgress(var1, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpDownloadListener::onFinish", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl var2 = (com.iflytek.cloud.msc.util.http.HttpDownloadImpl) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpDownloadListener ref = (com.iflytek.cloud.msc.util.http.HttpDownloadListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpDownloadListener@" + refId + "::onFinish(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onFinish(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpDownloadListener::onError", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // ref arg
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl var2 = (com.iflytek.cloud.msc.util.http.HttpDownloadImpl) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpDownloadListener ref = (com.iflytek.cloud.msc.util.http.HttpDownloadListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpDownloadListener@" + refId + "::onError(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpDownloadImpl::setHttpDownloadListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl ref = (com.iflytek.cloud.msc.util.http.HttpDownloadImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpDownloadImpl@" + refId + "::setHttpDownloadListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setHttpDownloadListener(new com.iflytek.cloud.msc.util.http.HttpDownloadListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.msc.util.http.HttpDownloadImpl::setHttpDownloadListener::Callback");
        
                // call dart method
                @Override
                public void onStart(long var1, String var3, String var4, String var5, com.iflytek.cloud.msc.util.http.HttpDownloadImpl var6) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onStart(" + var1 + var3 + var4 + var5 + var6 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    long argvar1 = var1;
                    // jsonable arg
                    String argvar3 = var3;
                    // jsonable arg
                    String argvar4 = var4;
                    // jsonable arg
                    String argvar5 = var5;
                    // ref arg
                    int argvar6 = var6.hashCode();
                    getHEAP().put(argvar6, var6);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.msc.util.http.HttpDownloadListener::onStart",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var3", argvar3);
                                put("var4", argvar4);
                                put("var5", argvar5);
                                put("var6", argvar6);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onProgress(long var1, int var3, com.iflytek.cloud.msc.util.http.HttpDownloadImpl var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onProgress(" + var1 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    long argvar1 = var1;
                    // jsonable arg
                    int argvar3 = var3;
                    // ref arg
                    int argvar4 = var4.hashCode();
                    getHEAP().put(argvar4, var4);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.msc.util.http.HttpDownloadListener::onProgress",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onFinish(String var1, com.iflytek.cloud.msc.util.http.HttpDownloadImpl var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onFinish(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // ref arg
                    int argvar2 = var2.hashCode();
                    getHEAP().put(argvar2, var2);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.msc.util.http.HttpDownloadListener::onFinish",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onError(int var1, com.iflytek.cloud.msc.util.http.HttpDownloadImpl var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // ref arg
                    int argvar2 = var2.hashCode();
                    getHEAP().put(argvar2, var2);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.msc.util.http.HttpDownloadListener::onError",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpDownloadImpl::start", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            boolean var4 = (boolean) args.get("var4");
            // jsonable arg
            String var5 = (String) args.get("var5");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl ref = (com.iflytek.cloud.msc.util.http.HttpDownloadImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpDownloadImpl@" + refId + "::start(" + var1 + var2 + var3 + var4 + var5 + ")");
            }
        
            // invoke native method
            try {
                ref.start(var1, var2, var3, var4, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpDownloadImpl::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl ref = (com.iflytek.cloud.msc.util.http.HttpDownloadImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpDownloadImpl@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpDownloadImpl::getId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl ref = (com.iflytek.cloud.msc.util.http.HttpDownloadImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpDownloadImpl@" + refId + "::getId(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpDownloadImpl::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl ref = (com.iflytek.cloud.msc.util.http.HttpDownloadImpl) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpDownloadImpl@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpTransListener::onStart", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
            // jsonable arg
            String var5 = (String) args.get("var5");
            // jsonable arg
            String var6 = (String) args.get("var6");
            // jsonable arg
            String var7 = (String) args.get("var7");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpTransListener ref = (com.iflytek.cloud.msc.util.http.HttpTransListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpTransListener@" + refId + "::onStart(" + var1 + var3 + var4 + var5 + var6 + var7 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.onStart(var1, var3, var4, var5, var6, var7);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpTransListener::onBuffer", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpTransListener ref = (com.iflytek.cloud.msc.util.http.HttpTransListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpTransListener@" + refId + "::onBuffer(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.onBuffer(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpTransListener::onFinish", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpTransListener ref = (com.iflytek.cloud.msc.util.http.HttpTransListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpTransListener@" + refId + "::onFinish(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onFinish();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpTransListener::onError", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpTransListener ref = (com.iflytek.cloud.msc.util.http.HttpTransListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpTransListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.http.HttpTransListener::onCancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.http.HttpTransListener ref = (com.iflytek.cloud.msc.util.http.HttpTransListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.http.HttpTransListener@" + refId + "::onCancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onCancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.msc.util.HttpRequest var1 = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener ref = (com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener@" + refId + "::onResult(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener ref = (com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.FuncAdapter::CloseHardWareAccelerate", (args, methodResult) -> {
            // args
            // ref arg
            android.view.View var0 = (android.view.View) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.FuncAdapter::CloseHardWareAccelerate(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.FuncAdapter.CloseHardWareAccelerate(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::getConfig", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config::getConfig(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.msc.util.Config result;
            try {
                result = com.iflytek.cloud.msc.util.Config.getConfig(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::putBoolean", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::putBoolean(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.putBoolean(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::putLong", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            long var2 = (long) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::putLong(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.putLong(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::putString", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::putString(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.putString(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::putInt", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::putInt(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.putInt(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::putBean", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            Object var2 = (Object) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::putBean(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.putBean(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::putLocation", (args, methodResult) -> {
            // args
            // ref arg
            android.location.Location var1 = (android.location.Location) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::putLocation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.putLocation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::removeBean", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::removeBean(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.removeBean(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::getBean", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::getBean(" + var1 + var2 + ")");
            }
        
            // invoke native method
            Object result;
            try {
                result = ref.getBean(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::getBoolean", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::getBoolean(" + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.getBoolean(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::getLong", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            long var2 = (long) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::getLong(" + var1 + var2 + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getLong(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::getString", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::getString(" + var1 + var2 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getString(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::getInt", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::getInt(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getInt(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::getLocation", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.Config ref = (com.iflytek.cloud.msc.util.Config) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config@" + refId + "::getLocation(" + var1 + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getLocation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.Config::hasGPSPermission", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.Config::hasGPSPermission(" + var0 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.msc.util.Config.hasGPSPermission(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.log.PerfLogger::setLogSaved", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.PerfLogger::setLogSaved(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.PerfLogger.setLogSaved(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.PerfLogger::saveLogFile", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.PerfLogger::saveLogFile(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.PerfLogger.saveLogFile(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.PerfLogger::clear", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.PerfLogger::clear(" + "" + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.PerfLogger.clear();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.PerfLogger::appendInfo", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.PerfLogger::appendInfo(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.PerfLogger.appendInfo(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.PerfLogger::appendInfoByValue", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.PerfLogger::appendInfoByValue(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.PerfLogger.appendInfoByValue(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::setTag", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::setTag(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.setTag(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogD__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogD(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogD(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogD__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogD(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogD(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogI__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogI(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogI(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogI__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogI(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogI(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogE__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogE(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogE(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogE__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogE(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogE(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogS__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogS(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogS(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogS__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogS(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogS(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogW__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogW(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogW(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::LogW__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::LogW(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.LogW(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::getShowLog", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::getShowLog(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.msc.util.log.DebugLog.getShowLog();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::setShowLog", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::setShowLog(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.setShowLog(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::getLogLevel", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::getLogLevel(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.msc.util.log.DebugLog.LOG_LEVEL result;
            try {
                result = com.iflytek.cloud.msc.util.log.DebugLog.getLogLevel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::setLogLevel", (args, methodResult) -> {
            // args
            // enum arg
            com.iflytek.cloud.msc.util.log.DebugLog.LOG_LEVEL var0 = com.iflytek.cloud.msc.util.log.DebugLog.LOG_LEVEL.values()[(int) args.get("var0")];
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::setLogLevel(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.setLogLevel(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.log.DebugLog::updateJniLogStatus", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.log.DebugLog::updateJniLogStatus(" + "" + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.log.DebugLog.updateJniLogStatus();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.UniqueIDUtil::getUniqueID", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.UniqueIDUtil::getUniqueID(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.UniqueIDUtil.getUniqueID(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.UniqueIDUtil::cleanRecord", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.UniqueIDUtil::cleanRecord(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.msc.util.UniqueIDUtil.cleanRecord(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.FileDownloader::getDownLoadManager", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.FileDownloader::getDownLoadManager(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.msc.util.FileDownloader result;
            try {
                result = com.iflytek.cloud.msc.util.FileDownloader.getDownLoadManager(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.msc.util.FileDownloader::startDownload", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // ref arg
            com.iflytek.cloud.util.FileDownloadListener var4 = (com.iflytek.cloud.util.FileDownloadListener) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.FileDownloader ref = (com.iflytek.cloud.msc.util.FileDownloader) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.FileDownloader@" + refId + "::startDownload(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startDownload(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AESUtil::generateKeyString", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::generateKeyString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AESUtil.generateKeyString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AESUtil::encrypt__Uint8List__Uint8List", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::encrypt(" + var0 + var1 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.AESUtil.encrypt(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AESUtil::encrypt__String__Uint8List", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::encrypt(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AESUtil.encrypt(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AESUtil::encrypt__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::encrypt(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AESUtil.encrypt(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AESUtil::decrypt__Uint8List__Uint8List", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::decrypt(" + var0 + var1 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.AESUtil.decrypt(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AESUtil::decrypt__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::decrypt(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AESUtil.decrypt(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AESUtil::decrypt__String__Uint8List", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::decrypt(" + var0 + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AESUtil.decrypt(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AESUtil::byte2hex", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::byte2hex(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.util.AESUtil.byte2hex(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.AESUtil::hex2byte", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.AESUtil::hex2byte(" + var0 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.cloud.msc.util.AESUtil.hex2byte(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::setHttpbuf", (args, methodResult) -> {
            // args
            // jsonable arg
            Object var1 = (Object) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::setHttpbuf(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setHttpbuf(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::getHttpbuf", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::getHttpbuf(" + "" + ")");
            }
        
            // invoke native method
            Object result;
            try {
                result = ref.getHttpbuf();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::setConectType", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::setConectType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setConectType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::setRequest__String__String__Uint8List", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::setRequest(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.setRequest(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::setRequest__String__String__Uint8List__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::setRequest(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.setRequest(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::setTimeOut", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::setTimeOut(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTimeOut(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::startRequest", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::startRequest(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.startRequest(new com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.msc.util.HttpRequest::startRequest::Callback");
        
                // call dart method
                @Override
                public void onResult(com.iflytek.cloud.msc.util.HttpRequest var1, byte[] var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    byte[] argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener::onResult",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onError(com.iflytek.cloud.SpeechError var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.msc.util.HttpRequest.HttpRequestListener::onError",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::run", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::run(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.run();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::appendData", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::appendData(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.appendData(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::runPost", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.util.HttpRequest ref = (com.iflytek.cloud.msc.util.HttpRequest) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest@" + refId + "::runPost(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.runPost();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.util.HttpRequest::hasHttpError", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.util.HttpRequest::hasHttpError(" + var0 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.msc.util.HttpRequest.hasHttpError(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::createBufferAccessor", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor::createBufferAccessor(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.msc.ist.AudioAccessor result;
            try {
                result = com.iflytek.cloud.msc.ist.AudioAccessor.createBufferAccessor();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::createReadOnlyAccessor", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor::createReadOnlyAccessor(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.msc.ist.AudioAccessor result;
            try {
                result = com.iflytek.cloud.msc.ist.AudioAccessor.createReadOnlyAccessor(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::createWriteReadAccessor", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor::createWriteReadAccessor(" + var0 + var1 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.msc.ist.AudioAccessor result;
            try {
                result = com.iflytek.cloud.msc.ist.AudioAccessor.createWriteReadAccessor(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::getFilePath", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.AudioAccessor ref = (com.iflytek.cloud.msc.ist.AudioAccessor) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + refId + "::getFilePath(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getFilePath();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::getDataLength", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.AudioAccessor ref = (com.iflytek.cloud.msc.ist.AudioAccessor) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + refId + "::getDataLength(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getDataLength();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::getAudioInfo", (args, methodResult) -> {
            // args
            // enum arg
            com.iflytek.cloud.msc.ist.AudioAccessor.AudioKeys var1 = com.iflytek.cloud.msc.ist.AudioAccessor.AudioKeys.values()[(int) args.get("var1")];
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.AudioAccessor ref = (com.iflytek.cloud.msc.ist.AudioAccessor) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + refId + "::getAudioInfo(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAudioInfo(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::getBufferLength", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.AudioAccessor ref = (com.iflytek.cloud.msc.ist.AudioAccessor) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + refId + "::getBufferLength(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getBufferLength();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::getCacheLeft", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.AudioAccessor ref = (com.iflytek.cloud.msc.ist.AudioAccessor) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + refId + "::getCacheLeft(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getCacheLeft();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::getAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.AudioAccessor ref = (com.iflytek.cloud.msc.ist.AudioAccessor) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + refId + "::getAudio(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getAudio(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::putAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.AudioAccessor ref = (com.iflytek.cloud.msc.ist.AudioAccessor) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + refId + "::putAudio(" + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.putAudio(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::flush", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.AudioAccessor ref = (com.iflytek.cloud.msc.ist.AudioAccessor) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + refId + "::flush(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.flush();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.ist.AudioAccessor::close", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.AudioAccessor ref = (com.iflytek.cloud.msc.ist.AudioAccessor) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.AudioAccessor@" + refId + "::close(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.close();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::pushAudioData", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::pushAudioData(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.pushAudioData(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::pushEndFlag", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::pushEndFlag(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.pushEndFlag();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::getEpStatus", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::getEpStatus(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getEpStatus();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::getAudioVolume", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::getAudioVolume(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getAudioVolume();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::getIntValue__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::getIntValue(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getIntValue(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::getIntValue__String__int", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::getIntValue(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getIntValue(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::setParam", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::setParam(" + var1 + var2 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.setParam(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::getStringValue", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::getStringValue(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getStringValue(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::getIntByTag", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession::getIntByTag(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.cloud.msc.ist.IstSession.getIntByTag(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::getStringByTag", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession::getStringByTag(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.msc.ist.IstSession.getStringByTag(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::hasResult", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::hasResult(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.hasResult();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.msc.ist.IstSession::getResultData", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.msc.ist.IstSession ref = (com.iflytek.cloud.msc.ist.IstSession) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.msc.ist.IstSession@" + refId + "::getResultData(" + "" + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = ref.getResultData();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechRecognizer::createRecognizer", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechRecognizer::createRecognizer(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechRecognizer result;
            try {
                result = com.iflytek.cloud.SpeechRecognizer.createRecognizer(var0, new com.iflytek.cloud.InitListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechRecognizer::createRecognizer::Callback");
        
                // call dart method
                @Override
                public void onInit(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.InitListener::onInit",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechRecognizer::getRecognizer", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechRecognizer::getRecognizer(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechRecognizer result;
            try {
                result = com.iflytek.cloud.SpeechRecognizer.getRecognizer();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechRecognizer::buildGrammar", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.GrammarListener var3 = (com.iflytek.cloud.GrammarListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechRecognizer ref = (com.iflytek.cloud.SpeechRecognizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechRecognizer@" + refId + "::buildGrammar(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.buildGrammar(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechRecognizer::updateLexicon", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.LexiconListener var3 = (com.iflytek.cloud.LexiconListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechRecognizer ref = (com.iflytek.cloud.SpeechRecognizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechRecognizer@" + refId + "::updateLexicon(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.updateLexicon(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechRecognizer::startListening", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.RecognizerListener var1 = (com.iflytek.cloud.RecognizerListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechRecognizer ref = (com.iflytek.cloud.SpeechRecognizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechRecognizer@" + refId + "::startListening(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startListening(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechRecognizer::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechRecognizer ref = (com.iflytek.cloud.SpeechRecognizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechRecognizer@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechRecognizer::stopListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechRecognizer ref = (com.iflytek.cloud.SpeechRecognizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechRecognizer@" + refId + "::stopListening(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechRecognizer::isListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechRecognizer ref = (com.iflytek.cloud.SpeechRecognizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechRecognizer@" + refId + "::isListening(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechRecognizer::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechRecognizer ref = (com.iflytek.cloud.SpeechRecognizer) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechRecognizer@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechError::getErrorCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechError ref = (com.iflytek.cloud.SpeechError) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechError@" + refId + "::getErrorCode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getErrorCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechError::getErrorDescription", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechError ref = (com.iflytek.cloud.SpeechError) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechError@" + refId + "::getErrorDescription(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getErrorDescription();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechError::getHtmlDescription", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechError ref = (com.iflytek.cloud.SpeechError) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechError@" + refId + "::getHtmlDescription(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getHtmlDescription(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechError::getPlainDescription", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechError ref = (com.iflytek.cloud.SpeechError) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechError@" + refId + "::getPlainDescription(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPlainDescription(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.Setting::setLogLevel", (args, methodResult) -> {
            // args
            // enum arg
            com.iflytek.cloud.Setting.LOG_LEVEL var0 = com.iflytek.cloud.Setting.LOG_LEVEL.values()[(int) args.get("var0")];
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::setLogLevel(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.Setting.setLogLevel(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.Setting::getLogLevel", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::getLogLevel(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.Setting.LOG_LEVEL result;
            try {
                result = com.iflytek.cloud.Setting.getLogLevel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.Setting::setLogPath", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::setLogPath(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.Setting.setLogPath(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.Setting::getLogPath", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::getLogPath(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.Setting.getLogPath();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.Setting::setShowLog", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::setShowLog(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.Setting.setShowLog(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.Setting::getShowLog", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::getShowLog(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.Setting.getShowLog();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.Setting::setSaveTestLog", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::setSaveTestLog(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.Setting.setSaveTestLog(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.Setting::getSaveTestLog", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::getSaveTestLog(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.Setting.getSaveTestLog();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.Setting::setLocationEnable", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::setLocationEnable(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.Setting.setLocationEnable(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.Setting::getLocationEnable", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Setting::getLocationEnable(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.Setting.getLocationEnable();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.WakeuperListener::onBeginOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.WakeuperListener ref = (com.iflytek.cloud.WakeuperListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperListener@" + refId + "::onBeginOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onBeginOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.WakeuperListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.WakeuperResult var1 = (com.iflytek.cloud.WakeuperResult) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.WakeuperListener ref = (com.iflytek.cloud.WakeuperListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperListener@" + refId + "::onResult(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.WakeuperListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.WakeuperListener ref = (com.iflytek.cloud.WakeuperListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.WakeuperListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.WakeuperListener ref = (com.iflytek.cloud.WakeuperListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.WakeuperListener::onVolumeChanged", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.WakeuperListener ref = (com.iflytek.cloud.WakeuperListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperListener@" + refId + "::onVolumeChanged(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onVolumeChanged(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.InitListener::onInit", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.InitListener ref = (com.iflytek.cloud.InitListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.InitListener@" + refId + "::onInit(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onInit(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.DataDownloader::downloadData", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechListener var1 = (com.iflytek.cloud.SpeechListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.DataDownloader ref = (com.iflytek.cloud.DataDownloader) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.DataDownloader@" + refId + "::downloadData(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.downloadData(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.RequestListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // ref arg
            android.os.Bundle var2 = (android.os.Bundle) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RequestListener ref = (com.iflytek.cloud.RequestListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RequestListener@" + refId + "::onEvent(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.RequestListener::onBufferReceived", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RequestListener ref = (com.iflytek.cloud.RequestListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RequestListener@" + refId + "::onBufferReceived(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onBufferReceived(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.RequestListener::onCompleted", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RequestListener ref = (com.iflytek.cloud.RequestListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RequestListener@" + refId + "::onCompleted(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onCompleted(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechEvaluator::createEvaluator", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator::createEvaluator(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechEvaluator result;
            try {
                result = com.iflytek.cloud.SpeechEvaluator.createEvaluator(var0, new com.iflytek.cloud.InitListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechEvaluator::createEvaluator::Callback");
        
                // call dart method
                @Override
                public void onInit(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.InitListener::onInit",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechEvaluator::getEvaluator", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator::getEvaluator(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechEvaluator result;
            try {
                result = com.iflytek.cloud.SpeechEvaluator.getEvaluator();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechEvaluator::startEvaluating__String__String__com_iflytek_cloud_EvaluatorListener", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.EvaluatorListener var3 = (com.iflytek.cloud.EvaluatorListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::startEvaluating(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startEvaluating(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechEvaluator::startEvaluating__Uint8List__String__com_iflytek_cloud_EvaluatorListener", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.iflytek.cloud.EvaluatorListener var3 = (com.iflytek.cloud.EvaluatorListener) getHEAP().get((int) args.get("var3"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::startEvaluating(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startEvaluating(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechEvaluator::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechEvaluator::isEvaluating", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::isEvaluating(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isEvaluating();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechEvaluator::stopEvaluating", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::stopEvaluating(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopEvaluating();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechEvaluator::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechEvaluator ref = (com.iflytek.cloud.SpeechEvaluator) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechEvaluator@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.TranscripterListener::onVolumeChanged", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onVolumeChanged(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onVolumeChanged(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.TranscripterListener::onBeginOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onBeginOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onBeginOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.TranscripterListener::onEndOfSpeech", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onEndOfSpeech(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.onEndOfSpeech();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.TranscripterListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.TranscripterResult var1 = (com.iflytek.cloud.TranscripterResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onResult(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.TranscripterListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.TranscripterListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TranscripterListener ref = (com.iflytek.cloud.TranscripterListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.VoiceWakeuper::createWakeuper", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper::createWakeuper(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.VoiceWakeuper result;
            try {
                result = com.iflytek.cloud.VoiceWakeuper.createWakeuper(var0, new com.iflytek.cloud.InitListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.VoiceWakeuper::createWakeuper::Callback");
        
                // call dart method
                @Override
                public void onInit(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.InitListener::onInit",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.VoiceWakeuper::getWakeuper", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper::getWakeuper(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.VoiceWakeuper result;
            try {
                result = com.iflytek.cloud.VoiceWakeuper.getWakeuper();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.VoiceWakeuper::queryResource", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            com.iflytek.cloud.RequestListener var2 = (com.iflytek.cloud.RequestListener) getHEAP().get((int) args.get("var2"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::queryResource(" + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.queryResource(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.VoiceWakeuper::downloadResource", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // ref arg
            com.iflytek.cloud.util.FileDownloadListener var4 = (com.iflytek.cloud.util.FileDownloadListener) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::downloadResource(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.downloadResource(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.VoiceWakeuper::startListening", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.WakeuperListener var1 = (com.iflytek.cloud.WakeuperListener) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::startListening(" + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startListening(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.VoiceWakeuper::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.VoiceWakeuper::stopListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::stopListening(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.VoiceWakeuper::isListening", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::isListening(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isListening();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.VoiceWakeuper::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.VoiceWakeuper ref = (com.iflytek.cloud.VoiceWakeuper) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.VoiceWakeuper@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.EvaluatorResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.EvaluatorResult ref = (com.iflytek.cloud.EvaluatorResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.EvaluatorResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstander::createUnderstander", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander::createUnderstander(" + var0 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechUnderstander result;
            try {
                result = com.iflytek.cloud.SpeechUnderstander.createUnderstander(var0, new com.iflytek.cloud.InitListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechUnderstander::createUnderstander::Callback");
        
                // call dart method
                @Override
                public void onInit(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onInit(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.InitListener::onInit",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstander::getUnderstander", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander::getUnderstander(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.SpeechUnderstander result;
            try {
                result = com.iflytek.cloud.SpeechUnderstander.getUnderstander();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstander::startUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::startUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.startUnderstanding(new com.iflytek.cloud.SpeechUnderstanderListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.cloud.SpeechUnderstander::startUnderstanding::Callback");
        
                // call dart method
                @Override
                public void onVolumeChanged(int var1, byte[] var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onVolumeChanged(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    byte[] argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onVolumeChanged",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onBeginOfSpeech() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBeginOfSpeech(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onBeginOfSpeech",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onEndOfSpeech() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onEndOfSpeech(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onEndOfSpeech",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onResult(com.iflytek.cloud.UnderstanderResult var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onResult(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onResult",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onError(com.iflytek.cloud.SpeechError var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onError(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onError",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onEvent(int var1, int var2, int var3, android.os.Bundle var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onEvent(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // ref arg
                    int argvar4 = var4.hashCode();
                    getHEAP().put(argvar4, var4);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.cloud.SpeechUnderstanderListener::onEvent",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstander::isUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::isUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isUnderstanding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstander::writeAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::writeAudio(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.writeAudio(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstander::stopUnderstanding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::stopUnderstanding(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopUnderstanding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.SpeechUnderstander::cancel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.SpeechUnderstander ref = (com.iflytek.cloud.SpeechUnderstander) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.SpeechUnderstander@" + refId + "::cancel(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.cancel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.resource.Resource::getLanguage", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getLanguage(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.resource.Resource.getLanguage();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.resource.Resource::matchLanguage", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::matchLanguage(" + var0 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.cloud.resource.Resource.matchLanguage(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.resource.Resource::setTitle", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::setTitle(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.resource.Resource.setTitle(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.resource.Resource::getTitle", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getTitle(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.resource.Resource.getTitle(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.resource.Resource::getText", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getText(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.resource.Resource.getText(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.resource.Resource::setText", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::setText(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.resource.Resource.setText(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.resource.Resource::getErrorDescription", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getErrorDescription(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.resource.Resource.getErrorDescription(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.resource.Resource::setErrorDescription", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::setErrorDescription(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.cloud.resource.Resource.setErrorDescription(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.resource.Resource::getErrorTag", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.resource.Resource::getErrorTag(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.resource.Resource.getErrorTag(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.FaceDetector::createDetector", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector::createDetector(" + var0 + var1 + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.FaceDetector result;
            try {
                result = com.iflytek.cloud.FaceDetector.createDetector(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.FaceDetector::getDetector", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector::getDetector(" + "" + ")");
            }
        
            // invoke native method
            com.iflytek.cloud.FaceDetector result;
            try {
                result = com.iflytek.cloud.FaceDetector.getDetector();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.iflytek.cloud.FaceDetector::detectARGB", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.FaceDetector ref = (com.iflytek.cloud.FaceDetector) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + refId + "::detectARGB(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.detectARGB(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.FaceDetector::detectGray", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.FaceDetector ref = (com.iflytek.cloud.FaceDetector) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + refId + "::detectGray(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.detectGray(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.FaceDetector::trackNV21", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
            // jsonable arg
            int var5 = (int) args.get("var5");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.FaceDetector ref = (com.iflytek.cloud.FaceDetector) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.FaceDetector@" + refId + "::trackNV21(" + var1 + var2 + var3 + var4 + var5 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.trackNV21(var1, var2, var3, var4, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.WakeuperResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.WakeuperResult ref = (com.iflytek.cloud.WakeuperResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.WakeuperResult::getBuffer", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.WakeuperResult ref = (com.iflytek.cloud.WakeuperResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.WakeuperResult@" + refId + "::getBuffer(" + "" + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = ref.getBuffer();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.DataUploader::uploadData", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechListener var1 = (com.iflytek.cloud.SpeechListener) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.DataUploader ref = (com.iflytek.cloud.DataUploader) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.DataUploader@" + refId + "::uploadData(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.uploadData(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.RecognizerResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.RecognizerResult ref = (com.iflytek.cloud.RecognizerResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.RecognizerResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.IdentityListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.IdentityResult var1 = (com.iflytek.cloud.IdentityResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityListener ref = (com.iflytek.cloud.IdentityListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityListener@" + refId + "::onResult(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.IdentityListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityListener ref = (com.iflytek.cloud.IdentityListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.IdentityListener::onEvent", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            android.os.Bundle var4 = (android.os.Bundle) getHEAP().get((int) args.get("var4"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.IdentityListener ref = (com.iflytek.cloud.IdentityListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.IdentityListener@" + refId + "::onEvent(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onEvent(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.TranscripterResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TranscripterResult ref = (com.iflytek.cloud.TranscripterResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TranscripterResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.Version::getVersion", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.Version::getVersion(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.iflytek.cloud.Version.getVersion();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.UnderstanderResult::getResultString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.UnderstanderResult ref = (com.iflytek.cloud.UnderstanderResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.UnderstanderResult@" + refId + "::getResultString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getResultString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.cloud.TextUnderstanderListener::onResult", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.UnderstanderResult var1 = (com.iflytek.cloud.UnderstanderResult) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TextUnderstanderListener ref = (com.iflytek.cloud.TextUnderstanderListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstanderListener@" + refId + "::onResult(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onResult(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.cloud.TextUnderstanderListener::onError", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.cloud.SpeechError var1 = (com.iflytek.cloud.SpeechError) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.cloud.TextUnderstanderListener ref = (com.iflytek.cloud.TextUnderstanderListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.cloud.TextUnderstanderListener@" + refId + "::onError(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onError(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADInitialize", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADInitialize(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADInitialize(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADUninitialize", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADUninitialize(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADUninitialize();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADLoadResource", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADLoadResource(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADLoadResource(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADDelResource", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADDelResource(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADDelResource(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADCreateSession", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADCreateSession(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADCreateSession(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADDestroySession", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADDestroySession(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADDestroySession(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADResetSession", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADResetSession(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADResetSession(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADAppendPCM", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADAppendPCM(" + var0 + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADAppendPCM(var0, var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADGetSeg", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADGetSeg(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADGetSeg(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADSetParam", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADSetParam(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADSetParam(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADGetSentConfidence", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADGetSentConfidence(" + var0 + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = com.iflytek.msc.MetaVAD.VADGetSentConfidence(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MetaVAD::VADResetSentence", (args, methodResult) -> {
            // args
            // ref arg
            com.iflytek.msc.MetaVAD.Instance var0 = (com.iflytek.msc.MetaVAD.Instance) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MetaVAD::VADResetSentence(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MetaVAD.VADResetSentence(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.VAD::Initialize", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::Initialize(" + var0 + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = com.iflytek.msc.VAD.Initialize(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.VAD::Uninitialize", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::Uninitialize(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.msc.VAD.Uninitialize(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.msc.VAD::Reset", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::Reset(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.msc.VAD.Reset(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.msc.VAD::AppendData", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::AppendData(" + var0 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.VAD.AppendData(var0, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.VAD::SetParam", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::SetParam(" + var0 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.VAD.SetParam(var0, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.VAD::EndAudioData", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::EndAudioData(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.VAD.EndAudioData(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.VAD::CalcVolumLevel", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            com.iflytek.msc.VAD.VadData var4 = (com.iflytek.msc.VAD.VadData) getHEAP().get((int) args.get("var4"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::CalcVolumLevel(" + var0 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.VAD.CalcVolumLevel(var0, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.VAD::FetchData", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
            // ref arg
            com.iflytek.msc.VAD.VadData var2 = (com.iflytek.msc.VAD.VadData) getHEAP().get((int) args.get("var2"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::FetchData(" + var0 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.VAD.FetchData(var0, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.VAD::GetLastSpeechPos", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
            // ref arg
            com.iflytek.msc.VAD.VadData var2 = (com.iflytek.msc.VAD.VadData) getHEAP().get((int) args.get("var2"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.VAD::GetLastSpeechPos(" + var0 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.VAD.GetLastSpeechPos(var0, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::loadLibrary", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::loadLibrary(" + var0 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.msc.AIMIC.loadLibrary(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.msc.AIMIC::isLoaded", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::isLoaded(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.msc.AIMIC.isLoaded();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::isValid", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::isValid(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.msc.AIMIC.isValid();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::getHandler", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::getHandler(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = com.iflytek.msc.AIMIC.getHandler();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::AIMICNew", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICNew(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.AIMIC.AIMICNew(var0, new com.iflytek.msc.AIMIC.Listener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.iflytek.msc.AIMIC::AIMICNew::Callback");
        
                // call dart method
                @Override
                public void onWakeupAudio(byte[] var1, int var2, int var3, Object var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWakeupAudio(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    byte[] argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // jsonable arg
                    Object argvar4 = var4;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.msc.AIMIC.Listener::onWakeupAudio",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onRecogAudio(byte[] var1, int var2, int var3, Object var4) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onRecogAudio(" + var1 + var2 + var3 + var4 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    byte[] argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // jsonable arg
                    Object argvar4 = var4;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.msc.AIMIC.Listener::onRecogAudio",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onWakeupMsg(int var1, int var2, int var3, byte[] var4, int var5, byte[] var6, int var7, byte[] var8, int var9) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWakeupMsg(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
                    // jsonable arg
                    int argvar3 = var3;
                    // jsonable arg
                    byte[] argvar4 = var4;
                    // jsonable arg
                    int argvar5 = var5;
                    // jsonable arg
                    byte[] argvar6 = var6;
                    // jsonable arg
                    int argvar7 = var7;
                    // jsonable arg
                    byte[] argvar8 = var8;
                    // jsonable arg
                    int argvar9 = var9;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.iflytek.msc.AIMIC.Listener::onWakeupMsg",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                                put("var3", argvar3);
                                put("var4", argvar4);
                                put("var5", argvar5);
                                put("var6", argvar6);
                                put("var7", argvar7);
                                put("var8", argvar8);
                                put("var9", argvar9);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::AIMICAudioWrite", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICAudioWrite(" + var0 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.AIMIC.AIMICAudioWrite(var0, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::AIMICResetEng", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICResetEng(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.AIMIC.AIMICResetEng(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::AIMICDestroy", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICDestroy(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.AIMIC.AIMICDestroy(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::AIMICSetParam", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICSetParam(" + var0 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.AIMIC.AIMICSetParam(var0, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::AIMICGetParam", (args, methodResult) -> {
            // args
            // jsonable arg
            long var0 = (long) args.get("var0");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICGetParam(" + var0 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.AIMIC.AIMICGetParam(var0, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::AIMICGetVersion", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICGetVersion(" + "" + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.msc.AIMIC.AIMICGetVersion();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC::AIMICDebugLog", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICDebugLog(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.msc.AIMIC.AIMICDebugLog(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.msc.AIMIC::AIMICGetChannel", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC::AIMICGetChannel(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.AIMIC.AIMICGetChannel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.AIMIC.Listener::onWakeupAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            Object var4 = (Object) args.get("var4");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.msc.AIMIC.Listener ref = (com.iflytek.msc.AIMIC.Listener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC.Listener@" + refId + "::onWakeupAudio(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onWakeupAudio(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.msc.AIMIC.Listener::onRecogAudio", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            Object var4 = (Object) args.get("var4");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.msc.AIMIC.Listener ref = (com.iflytek.msc.AIMIC.Listener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC.Listener@" + refId + "::onRecogAudio(" + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            try {
                ref.onRecogAudio(var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.msc.AIMIC.Listener::onWakeupMsg", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            byte[] var4 = (byte[]) args.get("var4");
            // jsonable arg
            int var5 = (int) args.get("var5");
            // jsonable arg
            byte[] var6 = (byte[]) args.get("var6");
            // jsonable arg
            int var7 = (int) args.get("var7");
            // jsonable arg
            byte[] var8 = (byte[]) args.get("var8");
            // jsonable arg
            int var9 = (int) args.get("var9");
        
            // ref
            int refId = (int) args.get("refId");
            com.iflytek.msc.AIMIC.Listener ref = (com.iflytek.msc.AIMIC.Listener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.AIMIC.Listener@" + refId + "::onWakeupMsg(" + var1 + var2 + var3 + var4 + var5 + var6 + var7 + var8 + var9 + ")");
            }
        
            // invoke native method
            try {
                ref.onWakeupMsg(var1, var2, var3, var4, var5, var6, var7, var8, var9);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.msc.MSC::isIflyVersion", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::isIflyVersion(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.msc.MSC.isIflyVersion();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::loadLibrary", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::loadLibrary(" + var0 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.msc.MSC.loadLibrary(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::load", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::load(" + var0 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.msc.MSC.load(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::isLoaded", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::isLoaded(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.msc.MSC.isLoaded();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::DebugLog", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var0 = (boolean) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::DebugLog(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.DebugLog(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::SetLogLevel", (args, methodResult) -> {
            // args
            // jsonable arg
            int var0 = (int) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::SetLogLevel(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.SetLogLevel(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QTTSInit", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QTTSInit(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QTTSInit(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QTTSFini", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QTTSFini(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QTTSFini();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QISRInit", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISRInit(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QISRInit(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QISRBuildGrammar", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
            // jsonable arg
            Object var5 = (Object) args.get("var5");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISRBuildGrammar(" + var0 + var1 + var2 + var3 + var4 + var5 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QISRBuildGrammar(var0, var1, var2, var3, var4, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QISRUpdateLexicon", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
            // jsonable arg
            Object var5 = (Object) args.get("var5");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISRUpdateLexicon(" + var0 + var1 + var2 + var3 + var4 + var5 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QISRUpdateLexicon(var0, var1, var2, var3, var4, var5);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QISRFini", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISRFini(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QISRFini();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QHCRInit", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QHCRInit(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QHCRInit(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QHCRFini", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QHCRFini(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QHCRFini();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QISVInit", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISVInit(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QISVInit(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QISVFini", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISVFini(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QISVFini();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPLogin", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPLogin(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QMSPLogin(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::UMSPLogin", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
            // jsonable arg
            Object var3 = (Object) args.get("var3");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::UMSPLogin(" + var0 + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.UMSPLogin(var0, var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPSetParam", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPSetParam(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QMSPSetParam(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPGetParam", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // ref arg
            com.iflytek.msc.MSCSessionInfo var1 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPGetParam(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QMSPGetParam(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPUploadData", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
            // ref arg
            com.iflytek.msc.MSCSessionInfo var4 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) args.get("var4"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPUploadData(" + var0 + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.msc.MSC.QMSPUploadData(var0, var1, var2, var3, var4);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPDownloadData", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // ref arg
            com.iflytek.msc.MSCSessionInfo var1 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPDownloadData(" + var0 + var1 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.msc.MSC.QMSPDownloadData(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPDownload", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            Object var2 = (Object) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPDownload(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QMSPDownload(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPSearch", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // ref arg
            com.iflytek.msc.MSCSessionInfo var2 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) args.get("var2"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPSearch(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.msc.MSC.QMSPSearch(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPLogOut", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPLogOut(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QMSPLogOut();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPRegisterNotify", (args, methodResult) -> {
            // args
            // jsonable arg
            String var0 = (String) args.get("var0");
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPRegisterNotify(" + var0 + var1 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QMSPRegisterNotify(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QMSPGetVersion", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // ref arg
            com.iflytek.msc.MSCSessionInfo var1 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QMSPGetVersion(" + var0 + var1 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.msc.MSC.QMSPGetVersion(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QISEInit", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISEInit(" + var0 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QISEInit(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QISEFini", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QISEFini(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QISEFini();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QIVWResMerge", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIVWResMerge(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QIVWResMerge(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QIVWGetResInfo", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            byte[] var1 = (byte[]) args.get("var1");
            // ref arg
            com.iflytek.msc.MSCSessionInfo var2 = (com.iflytek.msc.MSCSessionInfo) getHEAP().get((int) args.get("var2"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIVWGetResInfo(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QIVWGetResInfo(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QIFDInit", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            Object var1 = (Object) args.get("var1");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIFDInit(" + var0 + var1 + ")");
            }
        
            // invoke native method
            try {
                com.iflytek.msc.MSC.QIFDInit(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.iflytek.msc.MSC::QIFDFacedetect", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Bitmap var0 = (android.graphics.Bitmap) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            Object var2 = (Object) args.get("var2");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIFDFacedetect(" + var0 + var1 + var2 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.msc.MSC.QIFDFacedetect(var0, var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QIFDMultitracker", (args, methodResult) -> {
            // args
            // jsonable arg
            byte[] var0 = (byte[]) args.get("var0");
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
            // jsonable arg
            int var5 = (int) args.get("var5");
            // jsonable arg
            Object var6 = (Object) args.get("var6");
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIFDMultitracker(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + ")");
            }
        
            // invoke native method
            byte[] result;
            try {
                result = com.iflytek.msc.MSC.QIFDMultitracker(var0, var1, var2, var3, var4, var5, var6);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::QIFDFini", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::QIFDFini(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = com.iflytek.msc.MSC.QIFDFini();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.iflytek.msc.MSC::doARGB2Gray", (args, methodResult) -> {
            // args
            // ref arg
            android.graphics.Bitmap var0 = (android.graphics.Bitmap) getHEAP().get((int) args.get("var0"));
            // ref arg
            android.graphics.Bitmap var1 = (android.graphics.Bitmap) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.iflytek.msc.MSC::doARGB2Gray(" + var0 + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = com.iflytek.msc.MSC.doARGB2Gray(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // factory
        put("ObjectFactory::createcom_iflytek_speech_SpeechComponent__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_speech_SpeechComponent__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.speech.SpeechComponent obj = new com.iflytek.speech.SpeechComponent(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_speech_UtilityConfig__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_speech_UtilityConfig__");
        
            // args
        
        
            // create target object
            com.iflytek.speech.UtilityConfig obj = new com.iflytek.speech.UtilityConfig();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_speech_WakeuperResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_speech_WakeuperResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.speech.WakeuperResult obj = new com.iflytek.speech.WakeuperResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_speech_VerifierResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_speech_VerifierResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.speech.VerifierResult obj = new com.iflytek.speech.VerifierResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_speech_RecognizerResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_speech_RecognizerResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.speech.RecognizerResult obj = new com.iflytek.speech.RecognizerResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_speech_Version__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_speech_Version__");
        
            // args
        
        
            // create target object
            com.iflytek.speech.Version obj = new com.iflytek.speech.Version();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_speech_UnderstanderResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_speech_UnderstanderResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.speech.UnderstanderResult obj = new com.iflytek.speech.UnderstanderResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_ErrorCode__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_ErrorCode__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.ErrorCode obj = new com.iflytek.cloud.ErrorCode();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_record_PcmRecorder__int__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_record_PcmRecorder__int__int");
        
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.iflytek.cloud.record.PcmRecorder obj = new com.iflytek.cloud.record.PcmRecorder(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_record_PcmRecorder__int__int__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_record_PcmRecorder__int__int__int");
        
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // create target object
            com.iflytek.cloud.record.PcmRecorder obj = new com.iflytek.cloud.record.PcmRecorder(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_util_UserWords__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_util_UserWords__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.util.UserWords obj = new com.iflytek.cloud.util.UserWords();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_util_UserWords__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_util_UserWords__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.cloud.util.UserWords obj = new com.iflytek.cloud.util.UserWords(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_util_VerifierUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_util_VerifierUtil__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.util.VerifierUtil obj = new com.iflytek.cloud.util.VerifierUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_util_ResourceUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_util_ResourceUtil__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.util.ResourceUtil obj = new com.iflytek.cloud.util.ResourceUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_util_AudioDetector_DetectorResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_util_AudioDetector_DetectorResult__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.util.AudioDetector.DetectorResult obj = new com.iflytek.cloud.util.AudioDetector.DetectorResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_util_Accelerometer__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_util_Accelerometer__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.util.Accelerometer obj = new com.iflytek.cloud.util.Accelerometer(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_util_VolumeUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_util_VolumeUtil__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.util.VolumeUtil obj = new com.iflytek.cloud.util.VolumeUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_FaceRequest__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_FaceRequest__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.FaceRequest obj = new com.iflytek.cloud.FaceRequest(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_IdentityResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_IdentityResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.cloud.IdentityResult obj = new com.iflytek.cloud.IdentityResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_VoiceWakeuperImpl__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_VoiceWakeuperImpl__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.speech.impl.VoiceWakeuperImpl obj = new com.iflytek.cloud.speech.impl.VoiceWakeuperImpl(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_SpeechTranscripterImpl__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_SpeechTranscripterImpl__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.speech.impl.SpeechTranscripterImpl obj = new com.iflytek.cloud.speech.impl.SpeechTranscripterImpl(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_TextUnderstanderImpl__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_TextUnderstanderImpl__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.speech.impl.TextUnderstanderImpl obj = new com.iflytek.cloud.speech.impl.TextUnderstanderImpl(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_IdentityVerifierImpl__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_IdentityVerifierImpl__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.speech.impl.IdentityVerifierImpl obj = new com.iflytek.cloud.speech.impl.IdentityVerifierImpl(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_FaceDetectorImpl__android_content_Context__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_FaceDetectorImpl__android_content_Context__String");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // create target object
            com.iflytek.cloud.speech.impl.FaceDetectorImpl obj = new com.iflytek.cloud.speech.impl.FaceDetectorImpl(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_SpeechSynthesizerImpl__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_SpeechSynthesizerImpl__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl obj = new com.iflytek.cloud.speech.impl.SpeechSynthesizerImpl(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_SpeechRecognizerImpl__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_SpeechRecognizerImpl__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.speech.impl.SpeechRecognizerImpl obj = new com.iflytek.cloud.speech.impl.SpeechRecognizerImpl(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_SpeechUnderstanderImpl__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_SpeechUnderstanderImpl__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl obj = new com.iflytek.cloud.speech.impl.SpeechUnderstanderImpl(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_SpeakerVerifierImpl__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_SpeakerVerifierImpl__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.speech.impl.SpeakerVerifierImpl obj = new com.iflytek.cloud.speech.impl.SpeakerVerifierImpl(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_speech_impl_SpeechEvaluatorImpl__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_speech_impl_SpeechEvaluatorImpl__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl obj = new com.iflytek.cloud.speech.impl.SpeechEvaluatorImpl(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_FuncAdapterSdk10__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_FuncAdapterSdk10__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.FuncAdapterSdk10 obj = new com.iflytek.cloud.msc.util.FuncAdapterSdk10();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_NetworkUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_NetworkUtil__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.NetworkUtil obj = new com.iflytek.cloud.msc.util.NetworkUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_DataUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_DataUtil__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.DataUtil obj = new com.iflytek.cloud.msc.util.DataUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_RSAUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_RSAUtil__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.RSAUtil obj = new com.iflytek.cloud.msc.util.RSAUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_Encrypter__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_Encrypter__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.Encrypter obj = new com.iflytek.cloud.msc.util.Encrypter();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_AppInfoUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_AppInfoUtil__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.AppInfoUtil obj = new com.iflytek.cloud.msc.util.AppInfoUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_DataLogger__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_DataLogger__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.DataLogger obj = new com.iflytek.cloud.msc.util.DataLogger();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_SDCardHelper__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_SDCardHelper__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.SDCardHelper obj = new com.iflytek.cloud.msc.util.SDCardHelper();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_http_HttpDownloadImpl__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_http_HttpDownloadImpl__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl obj = new com.iflytek.cloud.msc.util.http.HttpDownloadImpl();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_http_HttpDownloadImpl__int__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_http_HttpDownloadImpl__int__android_content_Context");
        
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // ref arg
            android.content.Context var2 = (android.content.Context) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl obj = new com.iflytek.cloud.msc.util.http.HttpDownloadImpl(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_http_HttpDownloadImpl__long__int__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_http_HttpDownloadImpl__long__int__android_content_Context");
        
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // ref arg
            android.content.Context var4 = (android.content.Context) getHEAP().get((int) args.get("var4"));
        
            // create target object
            com.iflytek.cloud.msc.util.http.HttpDownloadImpl obj = new com.iflytek.cloud.msc.util.http.HttpDownloadImpl(var1, var3, var4);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_FuncAdapter__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_FuncAdapter__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.FuncAdapter obj = new com.iflytek.cloud.msc.util.FuncAdapter();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_log_PerfLogger__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_log_PerfLogger__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.log.PerfLogger obj = new com.iflytek.cloud.msc.util.log.PerfLogger();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_log_DebugLog__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_log_DebugLog__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.log.DebugLog obj = new com.iflytek.cloud.msc.util.log.DebugLog();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_UniqueIDUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_UniqueIDUtil__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.UniqueIDUtil obj = new com.iflytek.cloud.msc.util.UniqueIDUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_AESUtil__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_AESUtil__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.AESUtil obj = new com.iflytek.cloud.msc.util.AESUtil();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_HttpRequest__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_HttpRequest__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.util.HttpRequest obj = new com.iflytek.cloud.msc.util.HttpRequest();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_util_HttpRequest__String__String__byteArray", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_util_HttpRequest__String__String__byteArray");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            byte[] var3 = (byte[]) args.get("var3");
        
            // create target object
            com.iflytek.cloud.msc.util.HttpRequest obj = new com.iflytek.cloud.msc.util.HttpRequest(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_msc_ist_IstSession__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_msc_ist_IstSession__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.msc.ist.IstSession obj = new com.iflytek.cloud.msc.ist.IstSession();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_SpeechError__int__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_SpeechError__int__String");
        
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // create target object
            com.iflytek.cloud.SpeechError obj = new com.iflytek.cloud.SpeechError(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_SpeechError__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_SpeechError__int");
        
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // create target object
            com.iflytek.cloud.SpeechError obj = new com.iflytek.cloud.SpeechError(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_DataDownloader__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_DataDownloader__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.DataDownloader obj = new com.iflytek.cloud.DataDownloader(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_EvaluatorResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_EvaluatorResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.cloud.EvaluatorResult obj = new com.iflytek.cloud.EvaluatorResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_SpeechEvent__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_SpeechEvent__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.SpeechEvent obj = new com.iflytek.cloud.SpeechEvent();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_WakeuperResult__String__byteArray", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_WakeuperResult__String__byteArray");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            byte[] var2 = (byte[]) args.get("var2");
        
            // create target object
            com.iflytek.cloud.WakeuperResult obj = new com.iflytek.cloud.WakeuperResult(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_WakeuperResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_WakeuperResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.cloud.WakeuperResult obj = new com.iflytek.cloud.WakeuperResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_VerifierResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_VerifierResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.cloud.VerifierResult obj = new com.iflytek.cloud.VerifierResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_DataUploader__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_DataUploader__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.iflytek.cloud.DataUploader obj = new com.iflytek.cloud.DataUploader(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_RecognizerResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_RecognizerResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.cloud.RecognizerResult obj = new com.iflytek.cloud.RecognizerResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_TranscripterResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_TranscripterResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.cloud.TranscripterResult obj = new com.iflytek.cloud.TranscripterResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_Version__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_Version__");
        
            // args
        
        
            // create target object
            com.iflytek.cloud.Version obj = new com.iflytek.cloud.Version();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_cloud_UnderstanderResult__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_cloud_UnderstanderResult__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.iflytek.cloud.UnderstanderResult obj = new com.iflytek.cloud.UnderstanderResult(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_msc_VAD_VadData__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_msc_VAD_VadData__");
        
            // args
        
        
            // create target object
            com.iflytek.msc.VAD.VadData obj = new com.iflytek.msc.VAD.VadData();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_msc_MSCSessionInfo__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_msc_MSCSessionInfo__");
        
            // args
        
        
            // create target object
            com.iflytek.msc.MSCSessionInfo obj = new com.iflytek.msc.MSCSessionInfo();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_msc_MetaVAD__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_msc_MetaVAD__");
        
            // args
        
        
            // create target object
            com.iflytek.msc.MetaVAD obj = new com.iflytek.msc.MetaVAD();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_msc_VAD__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_msc_VAD__");
        
            // args
        
        
            // create target object
            com.iflytek.msc.VAD obj = new com.iflytek.msc.VAD();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_msc_AIMIC__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_msc_AIMIC__");
        
            // args
        
        
            // create target object
            com.iflytek.msc.AIMIC obj = new com.iflytek.msc.AIMIC();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_msc_MSC__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_msc_MSC__");
        
            // args
        
        
            // create target object
            com.iflytek.msc.MSC obj = new com.iflytek.msc.MSC();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_iflytek_msc_MetaVAD_Instance__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_iflytek_msc_MetaVAD_Instance__");
        
            // args
        
        
            // create target object
            com.iflytek.msc.MetaVAD.Instance obj = new com.iflytek.msc.MetaVAD.Instance();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
    }};

    // v1 android embedding for compatible
    public static void registerWith(Registrar registrar) {
        final MethodChannel channel = new MethodChannel(registrar.messenger(), "com.fluttify/xfiat_fluttify");

        XfiatFluttifyPlugin plugin = new XfiatFluttifyPlugin();
        BinaryMessenger messenger = registrar.messenger();
        plugin.messenger = messenger;

        channel.setMethodCallHandler(plugin);

        // register platform view
        PlatformViewRegistry platformViewRegistry = registrar.platformViewRegistry();
        
    }

    // v2 android embedding
    @Override
    public void onAttachedToEngine(FlutterPluginBinding binding) {
        final MethodChannel channel = new MethodChannel(binding.getBinaryMessenger(), "com.fluttify/xfiat_fluttify");

        messenger = binding.getBinaryMessenger();

        channel.setMethodCallHandler(this);


        // register platform view
        PlatformViewRegistry platformViewRegistry = binding.getPlatformViewRegistry();
        
    }

    @Override
    public void onDetachedFromEngine(FlutterPluginBinding binding) {

    }

    @Override
    public void onMethodCall(@NonNull MethodCall methodCall, @NonNull MethodChannel.Result methodResult) {
        Map<String, Object> args = (Map<String, Object>) methodCall.arguments;
        Handler handler = handlerMap.get(methodCall.method);
        if (handler != null) {
            try {
                handler.call(args, methodResult);
            } catch (Exception e) {
                e.printStackTrace();
                methodResult.error(e.getMessage(), null, null);
            }
        } else {
            methodResult.notImplemented();
        }
    }

    @FunctionalInterface
    interface Handler {
        void call(Map<String, Object> args, MethodChannel.Result methodResult) throws Exception;
    }
}

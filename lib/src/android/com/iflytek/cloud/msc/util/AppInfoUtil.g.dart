// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:xfiat_fluttify/src/ios/ios.export.g.dart';
import 'package:xfiat_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

class com_iflytek_cloud_msc_util_AppInfoUtil extends java_lang_Object  {
  //region constants
  static final String APP_NAME = "app.name";
  static final String APP_PATH = "app.path";
  static final String APP_PKG_NAME = "app.pkg";
  static final String APP_VER_NAME = "app.ver.name";
  static final String APP_VER_CODE = "app.ver.code";
  static final String OS_SYSTEM = "os.system";
  static final String OS_RESOLUTION = "os.resolution";
  static final String OS_DENSITY = "os.density";
  static final String CARRIER = "carrier";
  static final String NET_MAC = "net.mac";
  static final String OS_IMEI = "os.imei";
  static final String OS_IMSI = "os.imsi";
  static final String OS_ANDROID_ID = "os.android_id";
  static final String OS_VERSION = "os.version";
  static final String OS_RELEASE = "os.release";
  static final String OS_INCREMENTAL = "os.incremental";
  static final String BROWSER_UA = "user_agent";
  static final String DVC_TYPE = "device_type";
  static final String DVC_TYPE_HANDSET = "handset";
  static final String DVC_TYPE_TABLET = "tablet";
  static final String DVC_TYPE_UNKNOW = "unknow";
  //endregion

  //region creators
  static Future<com_iflytek_cloud_msc_util_AppInfoUtil> create__() async {
    final int refId = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('ObjectFactory::createcom_iflytek_cloud_msc_util_AppInfoUtil__');
    final object = com_iflytek_cloud_msc_util_AppInfoUtil()..refId = refId..tag = 'xfiat_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  static Future<String> getCarrier(android_content_Context var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.msc.util.AppInfoUtil::getCarrier([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.msc.util.AppInfoUtil::getCarrier', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<String> getMac(android_content_Context var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.msc.util.AppInfoUtil::getMac([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.msc.util.AppInfoUtil::getMac', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<String> getBrowserUserAgent(android_content_Context var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.msc.util.AppInfoUtil::getBrowserUserAgent([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.msc.util.AppInfoUtil::getBrowserUserAgent', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<String> getDeviceType(android_content_Context var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.msc.util.AppInfoUtil::getDeviceType([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.msc.util.AppInfoUtil::getDeviceType', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<String> checkAndReplaceIllegalSymbols(String var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.msc.util.AppInfoUtil::checkAndReplaceIllegalSymbols([\'var0\':$var0])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.msc.util.AppInfoUtil::checkAndReplaceIllegalSymbols', {"var0": var0});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  static Future<String> getActivityMsg(android_content_Context var0) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.msc.util.AppInfoUtil::getActivityMsg([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.msc.util.AppInfoUtil::getActivityMsg', {"var0": var0.refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  //endregion
}
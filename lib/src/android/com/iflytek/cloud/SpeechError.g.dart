// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:xfiat_fluttify/src/ios/ios.export.g.dart';
import 'package:xfiat_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

class com_iflytek_cloud_SpeechError extends java_lang_Object  {
  //region constants
  static final int TIP_ERROR_IVP_GENERAL = 55;
  static final int TIP_ERROR_IVP_EXTRA_RGN_SOPPORT = 56;
  static final int TIP_ERROR_IVP_TRUNCATED = 57;
  static final int TIP_ERROR_IVP_MUCH_NOISE = 58;
  static final int TIP_ERROR_IVP_TOO_LOW = 59;
  static final int TIP_ERROR_IVP_ZERO_AUDIO = 60;
  static final int TIP_ERROR_IVP_UTTER_TOO_SHORT = 61;
  static final int TIP_ERROR_IVP_TEXT_NOT_MATCH = 62;
  static final int TIP_ERROR_IVP_NO_ENOUGH_AUDIO = 63;
  static final int TIP_ERROR_MODEL_NOT_FOUND = 64;
  static final int TIP_ERROR_MODEL_IS_CREATING = 65;
  static final int TIP_ERROR_ALREADY_EXIST = 66;
  static final int TIP_ERROR_NO_GROUP = 67;
  static final int TIP_ERROR_GROUP_EMPTY = 68;
  static final int TIP_ERROR_NO_USER = 69;
  static final int TIP_ERROR_OVERFLOW_IN_GROUP = 70;
  static final int TIP_ERROR_AUTHID_NOT_AVAILABLE = 71;
  //endregion

  //region creators
  static Future<com_iflytek_cloud_SpeechError> create__int__String(int var1, String var2) async {
    final int refId = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('ObjectFactory::createcom_iflytek_cloud_SpeechError__int__String', {"var1": var1, "var2": var2});
    final object = com_iflytek_cloud_SpeechError()..refId = refId..tag = 'xfiat_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<com_iflytek_cloud_SpeechError> create__int(int var1) async {
    final int refId = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('ObjectFactory::createcom_iflytek_cloud_SpeechError__int', {"var1": var1});
    final object = com_iflytek_cloud_SpeechError()..refId = refId..tag = 'xfiat_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  //endregion

  //region getters
  
  //endregion

  //region setters
  
  //endregion

  //region methods
  Future<int> getErrorCode() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.SpeechError@$refId::getErrorCode([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.SpeechError::getErrorCode', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<String> getErrorDescription() async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.SpeechError@$refId::getErrorDescription([])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.SpeechError::getErrorDescription', {"refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<String> getHtmlDescription(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.SpeechError@$refId::getHtmlDescription([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.SpeechError::getHtmlDescription', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  Future<String> getPlainDescription(bool var1) async {
    // print log
    if (fluttifyLogEnabled) {
      print('fluttify-dart: com.iflytek.cloud.SpeechError@$refId::getPlainDescription([\'var1\':$var1])');
    }
  
    // invoke native method
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.SpeechError::getPlainDescription', {"var1": var1, "refId": refId});
  
  
    // handle native call
  
  
    // convert native result to dart side object
    if (result == null) {
      return null;
    } else {
    
      return result;
    }
  }
  
  //endregion
}
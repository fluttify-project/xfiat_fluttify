// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:xfiat_fluttify/src/ios/ios.export.g.dart';
import 'package:xfiat_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

class com_iflytek_cloud_util_AudioDetector_DetectorResult extends java_lang_Object  {
  //region constants
  static final int STATUS_OK = 0;
  static final int STATUS_START = 1;
  static final int STATUS_EOS = 2;
  static final int STATUS_BOS = 3;
  static final int STATUS_TIMEOUT = 4;
  static final int SUB_OK = 0;
  static final int SUB_START = 1;
  static final int SUB_END = 2;
  static final int SUB_STARTEND = 3;
  //endregion

  //region creators
  static Future<com_iflytek_cloud_util_AudioDetector_DetectorResult> create__() async {
    final int refId = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('ObjectFactory::createcom_iflytek_cloud_util_AudioDetector_DetectorResult__');
    final object = com_iflytek_cloud_util_AudioDetector_DetectorResult()..refId = refId..tag = 'xfiat_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  //endregion

  //region getters
  Future<Uint8List> get_buffer() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_buffer", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_offset() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_offset", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_length() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_length", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_status() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_status", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_sub() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_sub", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_volume() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_volume", {'refId': refId});
  
    return result;
  }
  
  Future<bool> get_voice() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_voice", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_quality() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_quality", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_start() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_start", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_end() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_end", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_error() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_error", {'refId': refId});
  
    return result;
  }
  
  Future<double> get_confidence() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.cloud.util.AudioDetector.DetectorResult::get_confidence", {'refId': refId});
  
    return result;
  }
  
  //endregion

  //region setters
  Future<void> set_buffer(Uint8List buffer) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_buffer', {'refId': refId, "buffer": buffer});
  
  
  }
  
  Future<void> set_offset(int offset) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_offset', {'refId': refId, "offset": offset});
  
  
  }
  
  Future<void> set_length(int length) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_length', {'refId': refId, "length": length});
  
  
  }
  
  Future<void> set_status(int status) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_status', {'refId': refId, "status": status});
  
  
  }
  
  Future<void> set_sub(int sub) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_sub', {'refId': refId, "sub": sub});
  
  
  }
  
  Future<void> set_volume(int volume) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_volume', {'refId': refId, "volume": volume});
  
  
  }
  
  Future<void> set_voice(bool voice) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_voice', {'refId': refId, "voice": voice});
  
  
  }
  
  Future<void> set_quality(int quality) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_quality', {'refId': refId, "quality": quality});
  
  
  }
  
  Future<void> set_start(int start) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_start', {'refId': refId, "start": start});
  
  
  }
  
  Future<void> set_end(int end) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_end', {'refId': refId, "end": end});
  
  
  }
  
  Future<void> set_error(int error) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_error', {'refId': refId, "error": error});
  
  
  }
  
  Future<void> set_confidence(double confidence) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.cloud.util.AudioDetector.DetectorResult::set_confidence', {'refId': refId, "confidence": confidence});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}
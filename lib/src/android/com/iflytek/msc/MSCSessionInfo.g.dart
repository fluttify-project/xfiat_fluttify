// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:xfiat_fluttify/src/ios/ios.export.g.dart';
import 'package:xfiat_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

class com_iflytek_msc_MSCSessionInfo extends java_lang_Object  {
  //region constants
  
  //endregion

  //region creators
  static Future<com_iflytek_msc_MSCSessionInfo> create__() async {
    final int refId = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('ObjectFactory::createcom_iflytek_msc_MSCSessionInfo__');
    final object = com_iflytek_msc_MSCSessionInfo()..refId = refId..tag = 'xfiat_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  //endregion

  //region getters
  Future<int> get_errorcode() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.msc.MSCSessionInfo::get_errorcode", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_epstatues() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.msc.MSCSessionInfo::get_epstatues", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_rsltstatus() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.msc.MSCSessionInfo::get_rsltstatus", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_sesstatus() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.msc.MSCSessionInfo::get_sesstatus", {'refId': refId});
  
    return result;
  }
  
  Future<Uint8List> get_buffer() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.msc.MSCSessionInfo::get_buffer", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_buflen() async {
    final result = await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod("com.iflytek.msc.MSCSessionInfo::get_buflen", {'refId': refId});
  
    return result;
  }
  
  //endregion

  //region setters
  Future<void> set_errorcode(int errorcode) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.msc.MSCSessionInfo::set_errorcode', {'refId': refId, "errorcode": errorcode});
  
  
  }
  
  Future<void> set_epstatues(int epstatues) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.msc.MSCSessionInfo::set_epstatues', {'refId': refId, "epstatues": epstatues});
  
  
  }
  
  Future<void> set_rsltstatus(int rsltstatus) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.msc.MSCSessionInfo::set_rsltstatus', {'refId': refId, "rsltstatus": rsltstatus});
  
  
  }
  
  Future<void> set_sesstatus(int sesstatus) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.msc.MSCSessionInfo::set_sesstatus', {'refId': refId, "sesstatus": sesstatus});
  
  
  }
  
  Future<void> set_buffer(Uint8List buffer) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.msc.MSCSessionInfo::set_buffer', {'refId': refId, "buffer": buffer});
  
  
  }
  
  Future<void> set_buflen(int buflen) async {
    await MethodChannel('com.fluttify/xfiat_fluttify').invokeMethod('com.iflytek.msc.MSCSessionInfo::set_buflen', {'refId': refId, "buflen": buflen});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}